
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000050c  08000188  08000188  00001188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000694  0800069c  0000169c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000694  08000694  0000169c  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08000694  08000694  0000169c  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08000694  0800069c  0000169c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000694  08000694  00001694  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000698  08000698  00001698  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  0000169c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0000169c  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0000169c  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000839  00000000  00000000  000016cc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000022b  00000000  00000000  00001f05  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000b8  00000000  00000000  00002130  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000007e  00000000  00000000  000021e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002185  00000000  00000000  00002266  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000f99  00000000  00000000  000043eb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00008193  00000000  00000000  00005384  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  0000d517  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000224  00000000  00000000  0000d55c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000006e  00000000  00000000  0000d780  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	@ (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000000 	.word	0x20000000
 80001a4:	00000000 	.word	0x00000000
 80001a8:	0800067c 	.word	0x0800067c

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	@ (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	@ (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	@ (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000004 	.word	0x20000004
 80001c4:	0800067c 	.word	0x0800067c

080001c8 <delay>:
 */
#include<stdint.h>
#include<unistd.h>
#include"stm32f407xx_gpio_driver.h"
void delay(void)
{
 80001c8:	b480      	push	{r7}
 80001ca:	b083      	sub	sp, #12
 80001cc:	af00      	add	r7, sp, #0
	for(uint32_t i=0; i<50000;i++);
 80001ce:	2300      	movs	r3, #0
 80001d0:	607b      	str	r3, [r7, #4]
 80001d2:	e002      	b.n	80001da <delay+0x12>
 80001d4:	687b      	ldr	r3, [r7, #4]
 80001d6:	3301      	adds	r3, #1
 80001d8:	607b      	str	r3, [r7, #4]
 80001da:	687b      	ldr	r3, [r7, #4]
 80001dc:	f24c 324f 	movw	r2, #49999	@ 0xc34f
 80001e0:	4293      	cmp	r3, r2
 80001e2:	d9f7      	bls.n	80001d4 <delay+0xc>
}
 80001e4:	bf00      	nop
 80001e6:	bf00      	nop
 80001e8:	370c      	adds	r7, #12
 80001ea:	46bd      	mov	sp, r7
 80001ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001f0:	4770      	bx	lr
	...

080001f4 <main>:
int main()
{
 80001f4:	b580      	push	{r7, lr}
 80001f6:	b084      	sub	sp, #16
 80001f8:	af00      	add	r7, sp, #0
	GPIO_Handle_t GPIO_Led;
	GPIO_Led.pGPIO=GPIOD;
 80001fa:	4b0f      	ldr	r3, [pc, #60]	@ (8000238 <main+0x44>)
 80001fc:	607b      	str	r3, [r7, #4]
	GPIO_Led.GPIO_PinConfig.GPIO_PinNumber=12;
 80001fe:	230c      	movs	r3, #12
 8000200:	723b      	strb	r3, [r7, #8]
	GPIO_Led.GPIO_PinConfig.GPIO_Mode=GPIO_MODE_OUT;
 8000202:	2301      	movs	r3, #1
 8000204:	727b      	strb	r3, [r7, #9]
	GPIO_Led.GPIO_PinConfig.GPIO_PinOPType=GPIO_OPTYPE_PP;//push-pull configuration
 8000206:	2300      	movs	r3, #0
 8000208:	733b      	strb	r3, [r7, #12]
	GPIO_Led.GPIO_PinConfig.GPIO_PinSpeed=GPIO_SPEED_LOW;
 800020a:	2300      	movs	r3, #0
 800020c:	72bb      	strb	r3, [r7, #10]
	GPIO_Led.GPIO_PinConfig.GPIO_PuPdControl=GPIO_PULLU;
 800020e:	2302      	movs	r3, #2
 8000210:	72fb      	strb	r3, [r7, #11]
	GPIO_PeriClockControl(GPIO_Led.pGPIO,ENABLE);
 8000212:	687b      	ldr	r3, [r7, #4]
 8000214:	2101      	movs	r1, #1
 8000216:	4618      	mov	r0, r3
 8000218:	f000 f83a 	bl	8000290 <GPIO_PeriClockControl>
	GPIO_Init(&GPIO_Led);
 800021c:	1d3b      	adds	r3, r7, #4
 800021e:	4618      	mov	r0, r3
 8000220:	f000 f914 	bl	800044c <GPIO_Init>
	while(1)
	{
		GPIO_ToggleOutputPin(GPIO_Led.pGPIO,GPIO_Led.GPIO_PinConfig.GPIO_PinNumber );
 8000224:	687b      	ldr	r3, [r7, #4]
 8000226:	7a3a      	ldrb	r2, [r7, #8]
 8000228:	4611      	mov	r1, r2
 800022a:	4618      	mov	r0, r3
 800022c:	f000 f9ec 	bl	8000608 <GPIO_ToggleOutputPin>
		delay();
 8000230:	f7ff ffca 	bl	80001c8 <delay>
		GPIO_ToggleOutputPin(GPIO_Led.pGPIO,GPIO_Led.GPIO_PinConfig.GPIO_PinNumber );
 8000234:	bf00      	nop
 8000236:	e7f5      	b.n	8000224 <main+0x30>
 8000238:	4003e000 	.word	0x4003e000

0800023c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800023c:	480d      	ldr	r0, [pc, #52]	@ (8000274 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800023e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000240:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000244:	480c      	ldr	r0, [pc, #48]	@ (8000278 <LoopForever+0x6>)
  ldr r1, =_edata
 8000246:	490d      	ldr	r1, [pc, #52]	@ (800027c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000248:	4a0d      	ldr	r2, [pc, #52]	@ (8000280 <LoopForever+0xe>)
  movs r3, #0
 800024a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800024c:	e002      	b.n	8000254 <LoopCopyDataInit>

0800024e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800024e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000250:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000252:	3304      	adds	r3, #4

08000254 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000254:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000256:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000258:	d3f9      	bcc.n	800024e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800025a:	4a0a      	ldr	r2, [pc, #40]	@ (8000284 <LoopForever+0x12>)
  ldr r4, =_ebss
 800025c:	4c0a      	ldr	r4, [pc, #40]	@ (8000288 <LoopForever+0x16>)
  movs r3, #0
 800025e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000260:	e001      	b.n	8000266 <LoopFillZerobss>

08000262 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000262:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000264:	3204      	adds	r2, #4

08000266 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000266:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000268:	d3fb      	bcc.n	8000262 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800026a:	f000 f9e3 	bl	8000634 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800026e:	f7ff ffc1 	bl	80001f4 <main>

08000272 <LoopForever>:

LoopForever:
  b LoopForever
 8000272:	e7fe      	b.n	8000272 <LoopForever>
  ldr   r0, =_estack
 8000274:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000278:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800027c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000280:	0800069c 	.word	0x0800069c
  ldr r2, =_sbss
 8000284:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000288:	2000001c 	.word	0x2000001c

0800028c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800028c:	e7fe      	b.n	800028c <ADC_IRQHandler>
	...

08000290 <GPIO_PeriClockControl>:
#include "stm32f407xx_gpio_driver.h"


/*Peripheral clock Setup*/
void GPIO_PeriClockControl(GPIO_RegDef_t *PGPIOx,uint8_t EnOrDi)
{
 8000290:	b480      	push	{r7}
 8000292:	b083      	sub	sp, #12
 8000294:	af00      	add	r7, sp, #0
 8000296:	6078      	str	r0, [r7, #4]
 8000298:	460b      	mov	r3, r1
 800029a:	70fb      	strb	r3, [r7, #3]
	if(EnOrDi==ENABLE)
 800029c:	78fb      	ldrb	r3, [r7, #3]
 800029e:	2b01      	cmp	r3, #1
 80002a0:	d15e      	bne.n	8000360 <GPIO_PeriClockControl+0xd0>
	{

			if(PGPIOx== GPIOA)
 80002a2:	687b      	ldr	r3, [r7, #4]
 80002a4:	4a60      	ldr	r2, [pc, #384]	@ (8000428 <GPIO_PeriClockControl+0x198>)
 80002a6:	4293      	cmp	r3, r2
 80002a8:	d106      	bne.n	80002b8 <GPIO_PeriClockControl+0x28>
			{
						GPIOA_PCLK_EN;
 80002aa:	4b60      	ldr	r3, [pc, #384]	@ (800042c <GPIO_PeriClockControl+0x19c>)
 80002ac:	691b      	ldr	r3, [r3, #16]
 80002ae:	4a5f      	ldr	r2, [pc, #380]	@ (800042c <GPIO_PeriClockControl+0x19c>)
 80002b0:	f043 0301 	orr.w	r3, r3, #1
 80002b4:	6113      	str	r3, [r2, #16]
					else
					{
								GPIOI_PCLK_DI;
					}
	}
}
 80002b6:	e0b1      	b.n	800041c <GPIO_PeriClockControl+0x18c>
			else if(PGPIOx== GPIOB)
 80002b8:	687b      	ldr	r3, [r7, #4]
 80002ba:	4a5d      	ldr	r2, [pc, #372]	@ (8000430 <GPIO_PeriClockControl+0x1a0>)
 80002bc:	4293      	cmp	r3, r2
 80002be:	d106      	bne.n	80002ce <GPIO_PeriClockControl+0x3e>
						GPIOB_PCLK_EN;
 80002c0:	4b5a      	ldr	r3, [pc, #360]	@ (800042c <GPIO_PeriClockControl+0x19c>)
 80002c2:	691b      	ldr	r3, [r3, #16]
 80002c4:	4a59      	ldr	r2, [pc, #356]	@ (800042c <GPIO_PeriClockControl+0x19c>)
 80002c6:	f043 0302 	orr.w	r3, r3, #2
 80002ca:	6113      	str	r3, [r2, #16]
}
 80002cc:	e0a6      	b.n	800041c <GPIO_PeriClockControl+0x18c>
			else if(PGPIOx== GPIOC)
 80002ce:	687b      	ldr	r3, [r7, #4]
 80002d0:	4a58      	ldr	r2, [pc, #352]	@ (8000434 <GPIO_PeriClockControl+0x1a4>)
 80002d2:	4293      	cmp	r3, r2
 80002d4:	d106      	bne.n	80002e4 <GPIO_PeriClockControl+0x54>
						GPIOC_PCLK_EN;
 80002d6:	4b55      	ldr	r3, [pc, #340]	@ (800042c <GPIO_PeriClockControl+0x19c>)
 80002d8:	691b      	ldr	r3, [r3, #16]
 80002da:	4a54      	ldr	r2, [pc, #336]	@ (800042c <GPIO_PeriClockControl+0x19c>)
 80002dc:	f043 0304 	orr.w	r3, r3, #4
 80002e0:	6113      	str	r3, [r2, #16]
}
 80002e2:	e09b      	b.n	800041c <GPIO_PeriClockControl+0x18c>
			else if(PGPIOx== GPIOD){
 80002e4:	687b      	ldr	r3, [r7, #4]
 80002e6:	4a54      	ldr	r2, [pc, #336]	@ (8000438 <GPIO_PeriClockControl+0x1a8>)
 80002e8:	4293      	cmp	r3, r2
 80002ea:	d106      	bne.n	80002fa <GPIO_PeriClockControl+0x6a>
						GPIOD_PCLK_EN;
 80002ec:	4b4f      	ldr	r3, [pc, #316]	@ (800042c <GPIO_PeriClockControl+0x19c>)
 80002ee:	691b      	ldr	r3, [r3, #16]
 80002f0:	4a4e      	ldr	r2, [pc, #312]	@ (800042c <GPIO_PeriClockControl+0x19c>)
 80002f2:	f043 0308 	orr.w	r3, r3, #8
 80002f6:	6113      	str	r3, [r2, #16]
}
 80002f8:	e090      	b.n	800041c <GPIO_PeriClockControl+0x18c>
			else if(PGPIOx== GPIOE)
 80002fa:	687b      	ldr	r3, [r7, #4]
 80002fc:	4a4f      	ldr	r2, [pc, #316]	@ (800043c <GPIO_PeriClockControl+0x1ac>)
 80002fe:	4293      	cmp	r3, r2
 8000300:	d106      	bne.n	8000310 <GPIO_PeriClockControl+0x80>
						GPIOE_PCLK_EN;
 8000302:	4b4a      	ldr	r3, [pc, #296]	@ (800042c <GPIO_PeriClockControl+0x19c>)
 8000304:	691b      	ldr	r3, [r3, #16]
 8000306:	4a49      	ldr	r2, [pc, #292]	@ (800042c <GPIO_PeriClockControl+0x19c>)
 8000308:	f043 0310 	orr.w	r3, r3, #16
 800030c:	6113      	str	r3, [r2, #16]
}
 800030e:	e085      	b.n	800041c <GPIO_PeriClockControl+0x18c>
			else if(PGPIOx== GPIOF)
 8000310:	687b      	ldr	r3, [r7, #4]
 8000312:	4a4b      	ldr	r2, [pc, #300]	@ (8000440 <GPIO_PeriClockControl+0x1b0>)
 8000314:	4293      	cmp	r3, r2
 8000316:	d106      	bne.n	8000326 <GPIO_PeriClockControl+0x96>
						GPIOF_PCLK_EN;
 8000318:	4b44      	ldr	r3, [pc, #272]	@ (800042c <GPIO_PeriClockControl+0x19c>)
 800031a:	691b      	ldr	r3, [r3, #16]
 800031c:	4a43      	ldr	r2, [pc, #268]	@ (800042c <GPIO_PeriClockControl+0x19c>)
 800031e:	f043 0320 	orr.w	r3, r3, #32
 8000322:	6113      	str	r3, [r2, #16]
}
 8000324:	e07a      	b.n	800041c <GPIO_PeriClockControl+0x18c>
			else if(PGPIOx== GPIOG)
 8000326:	687b      	ldr	r3, [r7, #4]
 8000328:	4a46      	ldr	r2, [pc, #280]	@ (8000444 <GPIO_PeriClockControl+0x1b4>)
 800032a:	4293      	cmp	r3, r2
 800032c:	d106      	bne.n	800033c <GPIO_PeriClockControl+0xac>
						GPIOG_PCLK_EN;
 800032e:	4b3f      	ldr	r3, [pc, #252]	@ (800042c <GPIO_PeriClockControl+0x19c>)
 8000330:	691b      	ldr	r3, [r3, #16]
 8000332:	4a3e      	ldr	r2, [pc, #248]	@ (800042c <GPIO_PeriClockControl+0x19c>)
 8000334:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000338:	6113      	str	r3, [r2, #16]
}
 800033a:	e06f      	b.n	800041c <GPIO_PeriClockControl+0x18c>
			else if(PGPIOx== GPIOH)
 800033c:	687b      	ldr	r3, [r7, #4]
 800033e:	4a42      	ldr	r2, [pc, #264]	@ (8000448 <GPIO_PeriClockControl+0x1b8>)
 8000340:	4293      	cmp	r3, r2
 8000342:	d106      	bne.n	8000352 <GPIO_PeriClockControl+0xc2>
						GPIOH_PCLK_EN;
 8000344:	4b39      	ldr	r3, [pc, #228]	@ (800042c <GPIO_PeriClockControl+0x19c>)
 8000346:	691b      	ldr	r3, [r3, #16]
 8000348:	4a38      	ldr	r2, [pc, #224]	@ (800042c <GPIO_PeriClockControl+0x19c>)
 800034a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800034e:	6113      	str	r3, [r2, #16]
}
 8000350:	e064      	b.n	800041c <GPIO_PeriClockControl+0x18c>
						GPIOI_PCLK_EN;
 8000352:	4b36      	ldr	r3, [pc, #216]	@ (800042c <GPIO_PeriClockControl+0x19c>)
 8000354:	691b      	ldr	r3, [r3, #16]
 8000356:	4a35      	ldr	r2, [pc, #212]	@ (800042c <GPIO_PeriClockControl+0x19c>)
 8000358:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800035c:	6113      	str	r3, [r2, #16]
}
 800035e:	e05d      	b.n	800041c <GPIO_PeriClockControl+0x18c>
					if(PGPIOx== GPIOA)
 8000360:	687b      	ldr	r3, [r7, #4]
 8000362:	4a31      	ldr	r2, [pc, #196]	@ (8000428 <GPIO_PeriClockControl+0x198>)
 8000364:	4293      	cmp	r3, r2
 8000366:	d106      	bne.n	8000376 <GPIO_PeriClockControl+0xe6>
								GPIOA_PCLK_DI;
 8000368:	4b30      	ldr	r3, [pc, #192]	@ (800042c <GPIO_PeriClockControl+0x19c>)
 800036a:	691b      	ldr	r3, [r3, #16]
 800036c:	4a2f      	ldr	r2, [pc, #188]	@ (800042c <GPIO_PeriClockControl+0x19c>)
 800036e:	f023 0301 	bic.w	r3, r3, #1
 8000372:	6113      	str	r3, [r2, #16]
}
 8000374:	e052      	b.n	800041c <GPIO_PeriClockControl+0x18c>
					else if(PGPIOx== GPIOB)
 8000376:	687b      	ldr	r3, [r7, #4]
 8000378:	4a2d      	ldr	r2, [pc, #180]	@ (8000430 <GPIO_PeriClockControl+0x1a0>)
 800037a:	4293      	cmp	r3, r2
 800037c:	d106      	bne.n	800038c <GPIO_PeriClockControl+0xfc>
								GPIOB_PCLK_DI;
 800037e:	4b2b      	ldr	r3, [pc, #172]	@ (800042c <GPIO_PeriClockControl+0x19c>)
 8000380:	691b      	ldr	r3, [r3, #16]
 8000382:	4a2a      	ldr	r2, [pc, #168]	@ (800042c <GPIO_PeriClockControl+0x19c>)
 8000384:	f023 0302 	bic.w	r3, r3, #2
 8000388:	6113      	str	r3, [r2, #16]
}
 800038a:	e047      	b.n	800041c <GPIO_PeriClockControl+0x18c>
					else if(PGPIOx== GPIOC)
 800038c:	687b      	ldr	r3, [r7, #4]
 800038e:	4a29      	ldr	r2, [pc, #164]	@ (8000434 <GPIO_PeriClockControl+0x1a4>)
 8000390:	4293      	cmp	r3, r2
 8000392:	d106      	bne.n	80003a2 <GPIO_PeriClockControl+0x112>
								GPIOC_PCLK_DI;
 8000394:	4b25      	ldr	r3, [pc, #148]	@ (800042c <GPIO_PeriClockControl+0x19c>)
 8000396:	691b      	ldr	r3, [r3, #16]
 8000398:	4a24      	ldr	r2, [pc, #144]	@ (800042c <GPIO_PeriClockControl+0x19c>)
 800039a:	f023 0304 	bic.w	r3, r3, #4
 800039e:	6113      	str	r3, [r2, #16]
}
 80003a0:	e03c      	b.n	800041c <GPIO_PeriClockControl+0x18c>
					else if(PGPIOx== GPIOD){
 80003a2:	687b      	ldr	r3, [r7, #4]
 80003a4:	4a24      	ldr	r2, [pc, #144]	@ (8000438 <GPIO_PeriClockControl+0x1a8>)
 80003a6:	4293      	cmp	r3, r2
 80003a8:	d106      	bne.n	80003b8 <GPIO_PeriClockControl+0x128>
								GPIOD_PCLK_DI;
 80003aa:	4b20      	ldr	r3, [pc, #128]	@ (800042c <GPIO_PeriClockControl+0x19c>)
 80003ac:	691b      	ldr	r3, [r3, #16]
 80003ae:	4a1f      	ldr	r2, [pc, #124]	@ (800042c <GPIO_PeriClockControl+0x19c>)
 80003b0:	f023 0308 	bic.w	r3, r3, #8
 80003b4:	6113      	str	r3, [r2, #16]
}
 80003b6:	e031      	b.n	800041c <GPIO_PeriClockControl+0x18c>
					else if(PGPIOx== GPIOE)
 80003b8:	687b      	ldr	r3, [r7, #4]
 80003ba:	4a20      	ldr	r2, [pc, #128]	@ (800043c <GPIO_PeriClockControl+0x1ac>)
 80003bc:	4293      	cmp	r3, r2
 80003be:	d106      	bne.n	80003ce <GPIO_PeriClockControl+0x13e>
								GPIOE_PCLK_DI;
 80003c0:	4b1a      	ldr	r3, [pc, #104]	@ (800042c <GPIO_PeriClockControl+0x19c>)
 80003c2:	691b      	ldr	r3, [r3, #16]
 80003c4:	4a19      	ldr	r2, [pc, #100]	@ (800042c <GPIO_PeriClockControl+0x19c>)
 80003c6:	f023 0310 	bic.w	r3, r3, #16
 80003ca:	6113      	str	r3, [r2, #16]
}
 80003cc:	e026      	b.n	800041c <GPIO_PeriClockControl+0x18c>
					else if(PGPIOx== GPIOF)
 80003ce:	687b      	ldr	r3, [r7, #4]
 80003d0:	4a1b      	ldr	r2, [pc, #108]	@ (8000440 <GPIO_PeriClockControl+0x1b0>)
 80003d2:	4293      	cmp	r3, r2
 80003d4:	d106      	bne.n	80003e4 <GPIO_PeriClockControl+0x154>
								GPIOF_PCLK_DI;
 80003d6:	4b15      	ldr	r3, [pc, #84]	@ (800042c <GPIO_PeriClockControl+0x19c>)
 80003d8:	691b      	ldr	r3, [r3, #16]
 80003da:	4a14      	ldr	r2, [pc, #80]	@ (800042c <GPIO_PeriClockControl+0x19c>)
 80003dc:	f023 0320 	bic.w	r3, r3, #32
 80003e0:	6113      	str	r3, [r2, #16]
}
 80003e2:	e01b      	b.n	800041c <GPIO_PeriClockControl+0x18c>
					else if(PGPIOx== GPIOG)
 80003e4:	687b      	ldr	r3, [r7, #4]
 80003e6:	4a17      	ldr	r2, [pc, #92]	@ (8000444 <GPIO_PeriClockControl+0x1b4>)
 80003e8:	4293      	cmp	r3, r2
 80003ea:	d106      	bne.n	80003fa <GPIO_PeriClockControl+0x16a>
								GPIOG_PCLK_DI;
 80003ec:	4b0f      	ldr	r3, [pc, #60]	@ (800042c <GPIO_PeriClockControl+0x19c>)
 80003ee:	691b      	ldr	r3, [r3, #16]
 80003f0:	4a0e      	ldr	r2, [pc, #56]	@ (800042c <GPIO_PeriClockControl+0x19c>)
 80003f2:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80003f6:	6113      	str	r3, [r2, #16]
}
 80003f8:	e010      	b.n	800041c <GPIO_PeriClockControl+0x18c>
					else if(PGPIOx== GPIOH)
 80003fa:	687b      	ldr	r3, [r7, #4]
 80003fc:	4a12      	ldr	r2, [pc, #72]	@ (8000448 <GPIO_PeriClockControl+0x1b8>)
 80003fe:	4293      	cmp	r3, r2
 8000400:	d106      	bne.n	8000410 <GPIO_PeriClockControl+0x180>
								GPIOH_PCLK_DI;
 8000402:	4b0a      	ldr	r3, [pc, #40]	@ (800042c <GPIO_PeriClockControl+0x19c>)
 8000404:	691b      	ldr	r3, [r3, #16]
 8000406:	4a09      	ldr	r2, [pc, #36]	@ (800042c <GPIO_PeriClockControl+0x19c>)
 8000408:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800040c:	6113      	str	r3, [r2, #16]
}
 800040e:	e005      	b.n	800041c <GPIO_PeriClockControl+0x18c>
								GPIOI_PCLK_DI;
 8000410:	4b06      	ldr	r3, [pc, #24]	@ (800042c <GPIO_PeriClockControl+0x19c>)
 8000412:	691b      	ldr	r3, [r3, #16]
 8000414:	4a05      	ldr	r2, [pc, #20]	@ (800042c <GPIO_PeriClockControl+0x19c>)
 8000416:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800041a:	6113      	str	r3, [r2, #16]
}
 800041c:	bf00      	nop
 800041e:	370c      	adds	r7, #12
 8000420:	46bd      	mov	sp, r7
 8000422:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000426:	4770      	bx	lr
 8000428:	40020000 	.word	0x40020000
 800042c:	401fc000 	.word	0x401fc000
 8000430:	4002a000 	.word	0x4002a000
 8000434:	40034000 	.word	0x40034000
 8000438:	4003e000 	.word	0x4003e000
 800043c:	40048000 	.word	0x40048000
 8000440:	40052000 	.word	0x40052000
 8000444:	4005c000 	.word	0x4005c000
 8000448:	40066000 	.word	0x40066000

0800044c <GPIO_Init>:

/* Init and DeInit*/
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 800044c:	b480      	push	{r7}
 800044e:	b085      	sub	sp, #20
 8000450:	af00      	add	r7, sp, #0
 8000452:	6078      	str	r0, [r7, #4]
	uint32_t temp=0;
 8000454:	2300      	movs	r3, #0
 8000456:	60fb      	str	r3, [r7, #12]
	//1. configure mode
	if(pGPIOHandle->GPIO_PinConfig.GPIO_Mode<=GPIO_MODE_ANALOG)
 8000458:	687b      	ldr	r3, [r7, #4]
 800045a:	795b      	ldrb	r3, [r3, #5]
 800045c:	2b03      	cmp	r3, #3
 800045e:	d81e      	bhi.n	800049e <GPIO_Init+0x52>
	{
		//non interrupt mode
		temp= pGPIOHandle->GPIO_PinConfig.GPIO_Mode << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000460:	687b      	ldr	r3, [r7, #4]
 8000462:	795b      	ldrb	r3, [r3, #5]
 8000464:	461a      	mov	r2, r3
 8000466:	687b      	ldr	r3, [r7, #4]
 8000468:	791b      	ldrb	r3, [r3, #4]
 800046a:	005b      	lsls	r3, r3, #1
 800046c:	fa02 f303 	lsl.w	r3, r2, r3
 8000470:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIO->MODER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //Clearing corresponding 2 bits
 8000472:	687b      	ldr	r3, [r7, #4]
 8000474:	681b      	ldr	r3, [r3, #0]
 8000476:	681a      	ldr	r2, [r3, #0]
 8000478:	687b      	ldr	r3, [r7, #4]
 800047a:	791b      	ldrb	r3, [r3, #4]
 800047c:	4619      	mov	r1, r3
 800047e:	2303      	movs	r3, #3
 8000480:	408b      	lsls	r3, r1
 8000482:	43db      	mvns	r3, r3
 8000484:	4619      	mov	r1, r3
 8000486:	687b      	ldr	r3, [r7, #4]
 8000488:	681b      	ldr	r3, [r3, #0]
 800048a:	400a      	ands	r2, r1
 800048c:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIO->MODER |= temp; //setting
 800048e:	687b      	ldr	r3, [r7, #4]
 8000490:	681b      	ldr	r3, [r3, #0]
 8000492:	6819      	ldr	r1, [r3, #0]
 8000494:	687b      	ldr	r3, [r7, #4]
 8000496:	681b      	ldr	r3, [r3, #0]
 8000498:	68fa      	ldr	r2, [r7, #12]
 800049a:	430a      	orrs	r2, r1
 800049c:	601a      	str	r2, [r3, #0]
	{
		//TODO: for Interrupt mode
	}

	//2. configure speed
	temp=0;
 800049e:	2300      	movs	r3, #0
 80004a0:	60fb      	str	r3, [r7, #12]
	temp= pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004a2:	687b      	ldr	r3, [r7, #4]
 80004a4:	799b      	ldrb	r3, [r3, #6]
 80004a6:	461a      	mov	r2, r3
 80004a8:	687b      	ldr	r3, [r7, #4]
 80004aa:	791b      	ldrb	r3, [r3, #4]
 80004ac:	005b      	lsls	r3, r3, #1
 80004ae:	fa02 f303 	lsl.w	r3, r2, r3
 80004b2:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIO->OSPEEDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004b4:	687b      	ldr	r3, [r7, #4]
 80004b6:	681b      	ldr	r3, [r3, #0]
 80004b8:	689a      	ldr	r2, [r3, #8]
 80004ba:	687b      	ldr	r3, [r7, #4]
 80004bc:	791b      	ldrb	r3, [r3, #4]
 80004be:	4619      	mov	r1, r3
 80004c0:	2303      	movs	r3, #3
 80004c2:	408b      	lsls	r3, r1
 80004c4:	43db      	mvns	r3, r3
 80004c6:	4619      	mov	r1, r3
 80004c8:	687b      	ldr	r3, [r7, #4]
 80004ca:	681b      	ldr	r3, [r3, #0]
 80004cc:	400a      	ands	r2, r1
 80004ce:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIO->OSPEEDR |= temp;
 80004d0:	687b      	ldr	r3, [r7, #4]
 80004d2:	681b      	ldr	r3, [r3, #0]
 80004d4:	6899      	ldr	r1, [r3, #8]
 80004d6:	687b      	ldr	r3, [r7, #4]
 80004d8:	681b      	ldr	r3, [r3, #0]
 80004da:	68fa      	ldr	r2, [r7, #12]
 80004dc:	430a      	orrs	r2, r1
 80004de:	609a      	str	r2, [r3, #8]

	//3. configure pull up pull down
	temp=0;
 80004e0:	2300      	movs	r3, #0
 80004e2:	60fb      	str	r3, [r7, #12]
	temp= pGPIOHandle->GPIO_PinConfig.GPIO_PuPdControl << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004e4:	687b      	ldr	r3, [r7, #4]
 80004e6:	79db      	ldrb	r3, [r3, #7]
 80004e8:	461a      	mov	r2, r3
 80004ea:	687b      	ldr	r3, [r7, #4]
 80004ec:	791b      	ldrb	r3, [r3, #4]
 80004ee:	005b      	lsls	r3, r3, #1
 80004f0:	fa02 f303 	lsl.w	r3, r2, r3
 80004f4:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIO->PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004f6:	687b      	ldr	r3, [r7, #4]
 80004f8:	681b      	ldr	r3, [r3, #0]
 80004fa:	68da      	ldr	r2, [r3, #12]
 80004fc:	687b      	ldr	r3, [r7, #4]
 80004fe:	791b      	ldrb	r3, [r3, #4]
 8000500:	4619      	mov	r1, r3
 8000502:	2303      	movs	r3, #3
 8000504:	408b      	lsls	r3, r1
 8000506:	43db      	mvns	r3, r3
 8000508:	4619      	mov	r1, r3
 800050a:	687b      	ldr	r3, [r7, #4]
 800050c:	681b      	ldr	r3, [r3, #0]
 800050e:	400a      	ands	r2, r1
 8000510:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIO->PUPDR |= temp;
 8000512:	687b      	ldr	r3, [r7, #4]
 8000514:	681b      	ldr	r3, [r3, #0]
 8000516:	68d9      	ldr	r1, [r3, #12]
 8000518:	687b      	ldr	r3, [r7, #4]
 800051a:	681b      	ldr	r3, [r3, #0]
 800051c:	68fa      	ldr	r2, [r7, #12]
 800051e:	430a      	orrs	r2, r1
 8000520:	60da      	str	r2, [r3, #12]

	//4. configure the output type
	temp=0;
 8000522:	2300      	movs	r3, #0
 8000524:	60fb      	str	r3, [r7, #12]
	temp= pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000526:	687b      	ldr	r3, [r7, #4]
 8000528:	7a1b      	ldrb	r3, [r3, #8]
 800052a:	461a      	mov	r2, r3
 800052c:	687b      	ldr	r3, [r7, #4]
 800052e:	791b      	ldrb	r3, [r3, #4]
 8000530:	fa02 f303 	lsl.w	r3, r2, r3
 8000534:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIO->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000536:	687b      	ldr	r3, [r7, #4]
 8000538:	681b      	ldr	r3, [r3, #0]
 800053a:	685a      	ldr	r2, [r3, #4]
 800053c:	687b      	ldr	r3, [r7, #4]
 800053e:	791b      	ldrb	r3, [r3, #4]
 8000540:	4619      	mov	r1, r3
 8000542:	2301      	movs	r3, #1
 8000544:	408b      	lsls	r3, r1
 8000546:	43db      	mvns	r3, r3
 8000548:	4619      	mov	r1, r3
 800054a:	687b      	ldr	r3, [r7, #4]
 800054c:	681b      	ldr	r3, [r3, #0]
 800054e:	400a      	ands	r2, r1
 8000550:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIO->OTYPER |= temp;
 8000552:	687b      	ldr	r3, [r7, #4]
 8000554:	681b      	ldr	r3, [r3, #0]
 8000556:	6859      	ldr	r1, [r3, #4]
 8000558:	687b      	ldr	r3, [r7, #4]
 800055a:	681b      	ldr	r3, [r3, #0]
 800055c:	68fa      	ldr	r2, [r7, #12]
 800055e:	430a      	orrs	r2, r1
 8000560:	605a      	str	r2, [r3, #4]

	// 5. configure alternate functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_Mode<=GPIO_MODE_ALTF)
 8000562:	687b      	ldr	r3, [r7, #4]
 8000564:	795b      	ldrb	r3, [r3, #5]
 8000566:	2b02      	cmp	r3, #2
 8000568:	d848      	bhi.n	80005fc <GPIO_Init+0x1b0>
	{
		temp=0;
 800056a:	2300      	movs	r3, #0
 800056c:	60fb      	str	r3, [r7, #12]
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber<GPIO_PIN_8)
 800056e:	687b      	ldr	r3, [r7, #4]
 8000570:	791b      	ldrb	r3, [r3, #4]
 8000572:	2b07      	cmp	r3, #7
 8000574:	d820      	bhi.n	80005b8 <GPIO_Init+0x16c>
		{
			temp= pGPIOHandle->GPIO_PinConfig.GPIO_AltFunmode << 4*(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000576:	687b      	ldr	r3, [r7, #4]
 8000578:	7a5b      	ldrb	r3, [r3, #9]
 800057a:	461a      	mov	r2, r3
 800057c:	687b      	ldr	r3, [r7, #4]
 800057e:	791b      	ldrb	r3, [r3, #4]
 8000580:	009b      	lsls	r3, r3, #2
 8000582:	fa02 f303 	lsl.w	r3, r2, r3
 8000586:	60fb      	str	r3, [r7, #12]
			pGPIOHandle->pGPIO->AFRL &= ~(0x0F << 4*(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000588:	687b      	ldr	r3, [r7, #4]
 800058a:	681b      	ldr	r3, [r3, #0]
 800058c:	6a1a      	ldr	r2, [r3, #32]
 800058e:	687b      	ldr	r3, [r7, #4]
 8000590:	791b      	ldrb	r3, [r3, #4]
 8000592:	009b      	lsls	r3, r3, #2
 8000594:	210f      	movs	r1, #15
 8000596:	fa01 f303 	lsl.w	r3, r1, r3
 800059a:	43db      	mvns	r3, r3
 800059c:	4619      	mov	r1, r3
 800059e:	687b      	ldr	r3, [r7, #4]
 80005a0:	681b      	ldr	r3, [r3, #0]
 80005a2:	400a      	ands	r2, r1
 80005a4:	621a      	str	r2, [r3, #32]
			pGPIOHandle->pGPIO->AFRL |= temp;
 80005a6:	687b      	ldr	r3, [r7, #4]
 80005a8:	681b      	ldr	r3, [r3, #0]
 80005aa:	6a19      	ldr	r1, [r3, #32]
 80005ac:	687b      	ldr	r3, [r7, #4]
 80005ae:	681b      	ldr	r3, [r3, #0]
 80005b0:	68fa      	ldr	r2, [r7, #12]
 80005b2:	430a      	orrs	r2, r1
 80005b4:	621a      	str	r2, [r3, #32]
			temp= pGPIOHandle->GPIO_PinConfig.GPIO_AltFunmode << 4*(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber-8);
			pGPIOHandle->pGPIO->AFRH &= ~(0x0F << 4*(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber-8));
			pGPIOHandle->pGPIO->AFRH |= temp;
		}
	}
}
 80005b6:	e021      	b.n	80005fc <GPIO_Init+0x1b0>
			temp= pGPIOHandle->GPIO_PinConfig.GPIO_AltFunmode << 4*(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber-8);
 80005b8:	687b      	ldr	r3, [r7, #4]
 80005ba:	7a5b      	ldrb	r3, [r3, #9]
 80005bc:	461a      	mov	r2, r3
 80005be:	687b      	ldr	r3, [r7, #4]
 80005c0:	791b      	ldrb	r3, [r3, #4]
 80005c2:	3b08      	subs	r3, #8
 80005c4:	009b      	lsls	r3, r3, #2
 80005c6:	fa02 f303 	lsl.w	r3, r2, r3
 80005ca:	60fb      	str	r3, [r7, #12]
			pGPIOHandle->pGPIO->AFRH &= ~(0x0F << 4*(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber-8));
 80005cc:	687b      	ldr	r3, [r7, #4]
 80005ce:	681b      	ldr	r3, [r3, #0]
 80005d0:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80005d2:	687b      	ldr	r3, [r7, #4]
 80005d4:	791b      	ldrb	r3, [r3, #4]
 80005d6:	3b08      	subs	r3, #8
 80005d8:	009b      	lsls	r3, r3, #2
 80005da:	210f      	movs	r1, #15
 80005dc:	fa01 f303 	lsl.w	r3, r1, r3
 80005e0:	43db      	mvns	r3, r3
 80005e2:	4619      	mov	r1, r3
 80005e4:	687b      	ldr	r3, [r7, #4]
 80005e6:	681b      	ldr	r3, [r3, #0]
 80005e8:	400a      	ands	r2, r1
 80005ea:	625a      	str	r2, [r3, #36]	@ 0x24
			pGPIOHandle->pGPIO->AFRH |= temp;
 80005ec:	687b      	ldr	r3, [r7, #4]
 80005ee:	681b      	ldr	r3, [r3, #0]
 80005f0:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 80005f2:	687b      	ldr	r3, [r7, #4]
 80005f4:	681b      	ldr	r3, [r3, #0]
 80005f6:	68fa      	ldr	r2, [r7, #12]
 80005f8:	430a      	orrs	r2, r1
 80005fa:	625a      	str	r2, [r3, #36]	@ 0x24
}
 80005fc:	bf00      	nop
 80005fe:	3714      	adds	r7, #20
 8000600:	46bd      	mov	sp, r7
 8000602:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000606:	4770      	bx	lr

08000608 <GPIO_ToggleOutputPin>:
void GPIO_WritToOutputPort(GPIO_RegDef_t *PGPIOx,uint16_t PortValue)
{
	PGPIOx->ODR = (uint32_t)PortValue;
}
void GPIO_ToggleOutputPin(GPIO_RegDef_t *PGPIOx, uint8_t PinNumber)
{
 8000608:	b480      	push	{r7}
 800060a:	b083      	sub	sp, #12
 800060c:	af00      	add	r7, sp, #0
 800060e:	6078      	str	r0, [r7, #4]
 8000610:	460b      	mov	r3, r1
 8000612:	70fb      	strb	r3, [r7, #3]
	PGPIOx->ODR ^= (1<<PinNumber);
 8000614:	687b      	ldr	r3, [r7, #4]
 8000616:	695b      	ldr	r3, [r3, #20]
 8000618:	78fa      	ldrb	r2, [r7, #3]
 800061a:	2101      	movs	r1, #1
 800061c:	fa01 f202 	lsl.w	r2, r1, r2
 8000620:	405a      	eors	r2, r3
 8000622:	687b      	ldr	r3, [r7, #4]
 8000624:	615a      	str	r2, [r3, #20]
}
 8000626:	bf00      	nop
 8000628:	370c      	adds	r7, #12
 800062a:	46bd      	mov	sp, r7
 800062c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000630:	4770      	bx	lr
	...

08000634 <__libc_init_array>:
 8000634:	b570      	push	{r4, r5, r6, lr}
 8000636:	4d0d      	ldr	r5, [pc, #52]	@ (800066c <__libc_init_array+0x38>)
 8000638:	4c0d      	ldr	r4, [pc, #52]	@ (8000670 <__libc_init_array+0x3c>)
 800063a:	1b64      	subs	r4, r4, r5
 800063c:	10a4      	asrs	r4, r4, #2
 800063e:	2600      	movs	r6, #0
 8000640:	42a6      	cmp	r6, r4
 8000642:	d109      	bne.n	8000658 <__libc_init_array+0x24>
 8000644:	4d0b      	ldr	r5, [pc, #44]	@ (8000674 <__libc_init_array+0x40>)
 8000646:	4c0c      	ldr	r4, [pc, #48]	@ (8000678 <__libc_init_array+0x44>)
 8000648:	f000 f818 	bl	800067c <_init>
 800064c:	1b64      	subs	r4, r4, r5
 800064e:	10a4      	asrs	r4, r4, #2
 8000650:	2600      	movs	r6, #0
 8000652:	42a6      	cmp	r6, r4
 8000654:	d105      	bne.n	8000662 <__libc_init_array+0x2e>
 8000656:	bd70      	pop	{r4, r5, r6, pc}
 8000658:	f855 3b04 	ldr.w	r3, [r5], #4
 800065c:	4798      	blx	r3
 800065e:	3601      	adds	r6, #1
 8000660:	e7ee      	b.n	8000640 <__libc_init_array+0xc>
 8000662:	f855 3b04 	ldr.w	r3, [r5], #4
 8000666:	4798      	blx	r3
 8000668:	3601      	adds	r6, #1
 800066a:	e7f2      	b.n	8000652 <__libc_init_array+0x1e>
 800066c:	08000694 	.word	0x08000694
 8000670:	08000694 	.word	0x08000694
 8000674:	08000694 	.word	0x08000694
 8000678:	08000698 	.word	0x08000698

0800067c <_init>:
 800067c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800067e:	bf00      	nop
 8000680:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000682:	bc08      	pop	{r3}
 8000684:	469e      	mov	lr, r3
 8000686:	4770      	bx	lr

08000688 <_fini>:
 8000688:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800068a:	bf00      	nop
 800068c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800068e:	bc08      	pop	{r3}
 8000690:	469e      	mov	lr, r3
 8000692:	4770      	bx	lr
