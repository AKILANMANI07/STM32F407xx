
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000778  08000188  08000188  00001188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000900  08000908  00001908  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000900  08000900  00001908  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08000900  08000900  00001908  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08000900  08000908  00001908  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000900  08000900  00001900  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000904  08000904  00001904  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001908  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00001908  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00001908  2**0
                  CONTENTS, READONLY
 13 .debug_info   000009df  00000000  00000000  00001938  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000002c4  00000000  00000000  00002317  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000d0  00000000  00000000  000025e0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000092  00000000  00000000  000026b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002243  00000000  00000000  00002742  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000011b3  00000000  00000000  00004985  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000085fd  00000000  00000000  00005b38  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  0000e135  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000290  00000000  00000000  0000e178  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000006e  00000000  00000000  0000e408  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	@ (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000000 	.word	0x20000000
 80001a4:	00000000 	.word	0x00000000
 80001a8:	080008e8 	.word	0x080008e8

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	@ (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	@ (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	@ (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000004 	.word	0x20000004
 80001c4:	080008e8 	.word	0x080008e8

080001c8 <delay>:
 */
#include<stdint.h>
#include<unistd.h>
#include"stm32f407xx_gpio_driver.h"
void delay(void)
{
 80001c8:	b480      	push	{r7}
 80001ca:	b083      	sub	sp, #12
 80001cc:	af00      	add	r7, sp, #0
	for(uint32_t i=0; i<50000;i++);
 80001ce:	2300      	movs	r3, #0
 80001d0:	607b      	str	r3, [r7, #4]
 80001d2:	e002      	b.n	80001da <delay+0x12>
 80001d4:	687b      	ldr	r3, [r7, #4]
 80001d6:	3301      	adds	r3, #1
 80001d8:	607b      	str	r3, [r7, #4]
 80001da:	687b      	ldr	r3, [r7, #4]
 80001dc:	f24c 324f 	movw	r2, #49999	@ 0xc34f
 80001e0:	4293      	cmp	r3, r2
 80001e2:	d9f7      	bls.n	80001d4 <delay+0xc>
}
 80001e4:	bf00      	nop
 80001e6:	bf00      	nop
 80001e8:	370c      	adds	r7, #12
 80001ea:	46bd      	mov	sp, r7
 80001ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001f0:	4770      	bx	lr
	...

080001f4 <main>:
int main()
{
 80001f4:	b580      	push	{r7, lr}
 80001f6:	b084      	sub	sp, #16
 80001f8:	af00      	add	r7, sp, #0
	GPIO_Handle_t GPIO_Led;
	GPIO_Led.pGPIO=GPIOD;
 80001fa:	4b0f      	ldr	r3, [pc, #60]	@ (8000238 <main+0x44>)
 80001fc:	607b      	str	r3, [r7, #4]
	GPIO_Led.GPIO_PinConfig.GPIO_PinNumber=12;
 80001fe:	230c      	movs	r3, #12
 8000200:	723b      	strb	r3, [r7, #8]
	GPIO_Led.GPIO_PinConfig.GPIO_Mode=GPIO_MODE_OUT;
 8000202:	2301      	movs	r3, #1
 8000204:	727b      	strb	r3, [r7, #9]
	GPIO_Led.GPIO_PinConfig.GPIO_PinOPType=GPIO_OPTYPE_PP;//push-pull configuration
 8000206:	2300      	movs	r3, #0
 8000208:	733b      	strb	r3, [r7, #12]
	GPIO_Led.GPIO_PinConfig.GPIO_PinSpeed=GPIO_SPEED_LOW;
 800020a:	2300      	movs	r3, #0
 800020c:	72bb      	strb	r3, [r7, #10]
	GPIO_Led.GPIO_PinConfig.GPIO_PuPdControl=GPIO_PULLU;
 800020e:	2302      	movs	r3, #2
 8000210:	72fb      	strb	r3, [r7, #11]
	GPIO_PeriClockControl(GPIO_Led.pGPIO,ENABLE);
 8000212:	687b      	ldr	r3, [r7, #4]
 8000214:	2101      	movs	r1, #1
 8000216:	4618      	mov	r0, r3
 8000218:	f000 f842 	bl	80002a0 <GPIO_PeriClockControl>
	GPIO_Init(&GPIO_Led);
 800021c:	1d3b      	adds	r3, r7, #4
 800021e:	4618      	mov	r0, r3
 8000220:	f000 f9a6 	bl	8000570 <GPIO_Init>

	while(1)
	{
		GPIO_ToggleOutputPin(GPIO_Led.pGPIO,GPIO_Led.GPIO_PinConfig.GPIO_PinNumber );
 8000224:	687b      	ldr	r3, [r7, #4]
 8000226:	7a3a      	ldrb	r2, [r7, #8]
 8000228:	4611      	mov	r1, r2
 800022a:	4618      	mov	r0, r3
 800022c:	f000 fb02 	bl	8000834 <GPIO_ToggleOutputPin>
		delay();
 8000230:	f7ff ffca 	bl	80001c8 <delay>
		GPIO_ToggleOutputPin(GPIO_Led.pGPIO,GPIO_Led.GPIO_PinConfig.GPIO_PinNumber );
 8000234:	bf00      	nop
 8000236:	e7f5      	b.n	8000224 <main+0x30>
 8000238:	4003e000 	.word	0x4003e000

0800023c <EXTI0_IRQHandler>:

	return 0;
}

void EXTI0_IRQHandler(void)
{
 800023c:	b580      	push	{r7, lr}
 800023e:	af00      	add	r7, sp, #0
	GPIO_IRQHandling(0);
 8000240:	2000      	movs	r0, #0
 8000242:	f000 fb0d 	bl	8000860 <GPIO_IRQHandling>
}
 8000246:	bf00      	nop
 8000248:	bd80      	pop	{r7, pc}
	...

0800024c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800024c:	480d      	ldr	r0, [pc, #52]	@ (8000284 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800024e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000250:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000254:	480c      	ldr	r0, [pc, #48]	@ (8000288 <LoopForever+0x6>)
  ldr r1, =_edata
 8000256:	490d      	ldr	r1, [pc, #52]	@ (800028c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000258:	4a0d      	ldr	r2, [pc, #52]	@ (8000290 <LoopForever+0xe>)
  movs r3, #0
 800025a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800025c:	e002      	b.n	8000264 <LoopCopyDataInit>

0800025e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800025e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000260:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000262:	3304      	adds	r3, #4

08000264 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000264:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000266:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000268:	d3f9      	bcc.n	800025e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800026a:	4a0a      	ldr	r2, [pc, #40]	@ (8000294 <LoopForever+0x12>)
  ldr r4, =_ebss
 800026c:	4c0a      	ldr	r4, [pc, #40]	@ (8000298 <LoopForever+0x16>)
  movs r3, #0
 800026e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000270:	e001      	b.n	8000276 <LoopFillZerobss>

08000272 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000272:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000274:	3204      	adds	r2, #4

08000276 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000276:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000278:	d3fb      	bcc.n	8000272 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800027a:	f000 fb11 	bl	80008a0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800027e:	f7ff ffb9 	bl	80001f4 <main>

08000282 <LoopForever>:

LoopForever:
  b LoopForever
 8000282:	e7fe      	b.n	8000282 <LoopForever>
  ldr   r0, =_estack
 8000284:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000288:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800028c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000290:	08000908 	.word	0x08000908
  ldr r2, =_sbss
 8000294:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000298:	2000001c 	.word	0x2000001c

0800029c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800029c:	e7fe      	b.n	800029c <ADC_IRQHandler>
	...

080002a0 <GPIO_PeriClockControl>:
#include "stm32f407xx_gpio_driver.h"


/*Peripheral clock Setup*/
void GPIO_PeriClockControl(GPIO_RegDef_t *PGPIOx,uint8_t EnOrDi)
{
 80002a0:	b480      	push	{r7}
 80002a2:	b083      	sub	sp, #12
 80002a4:	af00      	add	r7, sp, #0
 80002a6:	6078      	str	r0, [r7, #4]
 80002a8:	460b      	mov	r3, r1
 80002aa:	70fb      	strb	r3, [r7, #3]
	if(EnOrDi==ENABLE)
 80002ac:	78fb      	ldrb	r3, [r7, #3]
 80002ae:	2b01      	cmp	r3, #1
 80002b0:	d174      	bne.n	800039c <GPIO_PeriClockControl+0xfc>
	{

			if(PGPIOx== GPIOA)
 80002b2:	687b      	ldr	r3, [r7, #4]
 80002b4:	4a76      	ldr	r2, [pc, #472]	@ (8000490 <GPIO_PeriClockControl+0x1f0>)
 80002b6:	4293      	cmp	r3, r2
 80002b8:	d106      	bne.n	80002c8 <GPIO_PeriClockControl+0x28>
			{
						GPIOA_PCLK_EN;
 80002ba:	4b76      	ldr	r3, [pc, #472]	@ (8000494 <GPIO_PeriClockControl+0x1f4>)
 80002bc:	691b      	ldr	r3, [r3, #16]
 80002be:	4a75      	ldr	r2, [pc, #468]	@ (8000494 <GPIO_PeriClockControl+0x1f4>)
 80002c0:	f043 0301 	orr.w	r3, r3, #1
 80002c4:	6113      	str	r3, [r2, #16]
					else
					{
								GPIOI_PCLK_DI;
					}
	}
}
 80002c6:	e0dd      	b.n	8000484 <GPIO_PeriClockControl+0x1e4>
			else if(PGPIOx== GPIOB)
 80002c8:	687b      	ldr	r3, [r7, #4]
 80002ca:	4a73      	ldr	r2, [pc, #460]	@ (8000498 <GPIO_PeriClockControl+0x1f8>)
 80002cc:	4293      	cmp	r3, r2
 80002ce:	d106      	bne.n	80002de <GPIO_PeriClockControl+0x3e>
						GPIOB_PCLK_EN;
 80002d0:	4b70      	ldr	r3, [pc, #448]	@ (8000494 <GPIO_PeriClockControl+0x1f4>)
 80002d2:	691b      	ldr	r3, [r3, #16]
 80002d4:	4a6f      	ldr	r2, [pc, #444]	@ (8000494 <GPIO_PeriClockControl+0x1f4>)
 80002d6:	f043 0302 	orr.w	r3, r3, #2
 80002da:	6113      	str	r3, [r2, #16]
}
 80002dc:	e0d2      	b.n	8000484 <GPIO_PeriClockControl+0x1e4>
			else if(PGPIOx== GPIOC)
 80002de:	687b      	ldr	r3, [r7, #4]
 80002e0:	4a6e      	ldr	r2, [pc, #440]	@ (800049c <GPIO_PeriClockControl+0x1fc>)
 80002e2:	4293      	cmp	r3, r2
 80002e4:	d106      	bne.n	80002f4 <GPIO_PeriClockControl+0x54>
						GPIOC_PCLK_EN;
 80002e6:	4b6b      	ldr	r3, [pc, #428]	@ (8000494 <GPIO_PeriClockControl+0x1f4>)
 80002e8:	691b      	ldr	r3, [r3, #16]
 80002ea:	4a6a      	ldr	r2, [pc, #424]	@ (8000494 <GPIO_PeriClockControl+0x1f4>)
 80002ec:	f043 0304 	orr.w	r3, r3, #4
 80002f0:	6113      	str	r3, [r2, #16]
}
 80002f2:	e0c7      	b.n	8000484 <GPIO_PeriClockControl+0x1e4>
			else if(PGPIOx== GPIOD){
 80002f4:	687b      	ldr	r3, [r7, #4]
 80002f6:	4a6a      	ldr	r2, [pc, #424]	@ (80004a0 <GPIO_PeriClockControl+0x200>)
 80002f8:	4293      	cmp	r3, r2
 80002fa:	d106      	bne.n	800030a <GPIO_PeriClockControl+0x6a>
						GPIOD_PCLK_EN;
 80002fc:	4b65      	ldr	r3, [pc, #404]	@ (8000494 <GPIO_PeriClockControl+0x1f4>)
 80002fe:	691b      	ldr	r3, [r3, #16]
 8000300:	4a64      	ldr	r2, [pc, #400]	@ (8000494 <GPIO_PeriClockControl+0x1f4>)
 8000302:	f043 0308 	orr.w	r3, r3, #8
 8000306:	6113      	str	r3, [r2, #16]
}
 8000308:	e0bc      	b.n	8000484 <GPIO_PeriClockControl+0x1e4>
			else if(PGPIOx== GPIOE)
 800030a:	687b      	ldr	r3, [r7, #4]
 800030c:	4a65      	ldr	r2, [pc, #404]	@ (80004a4 <GPIO_PeriClockControl+0x204>)
 800030e:	4293      	cmp	r3, r2
 8000310:	d106      	bne.n	8000320 <GPIO_PeriClockControl+0x80>
						GPIOE_PCLK_EN;
 8000312:	4b60      	ldr	r3, [pc, #384]	@ (8000494 <GPIO_PeriClockControl+0x1f4>)
 8000314:	691b      	ldr	r3, [r3, #16]
 8000316:	4a5f      	ldr	r2, [pc, #380]	@ (8000494 <GPIO_PeriClockControl+0x1f4>)
 8000318:	f043 0310 	orr.w	r3, r3, #16
 800031c:	6113      	str	r3, [r2, #16]
}
 800031e:	e0b1      	b.n	8000484 <GPIO_PeriClockControl+0x1e4>
			else if(PGPIOx== GPIOF)
 8000320:	687b      	ldr	r3, [r7, #4]
 8000322:	4a61      	ldr	r2, [pc, #388]	@ (80004a8 <GPIO_PeriClockControl+0x208>)
 8000324:	4293      	cmp	r3, r2
 8000326:	d106      	bne.n	8000336 <GPIO_PeriClockControl+0x96>
						GPIOF_PCLK_EN;
 8000328:	4b5a      	ldr	r3, [pc, #360]	@ (8000494 <GPIO_PeriClockControl+0x1f4>)
 800032a:	691b      	ldr	r3, [r3, #16]
 800032c:	4a59      	ldr	r2, [pc, #356]	@ (8000494 <GPIO_PeriClockControl+0x1f4>)
 800032e:	f043 0320 	orr.w	r3, r3, #32
 8000332:	6113      	str	r3, [r2, #16]
}
 8000334:	e0a6      	b.n	8000484 <GPIO_PeriClockControl+0x1e4>
			else if(PGPIOx== GPIOG)
 8000336:	687b      	ldr	r3, [r7, #4]
 8000338:	4a5c      	ldr	r2, [pc, #368]	@ (80004ac <GPIO_PeriClockControl+0x20c>)
 800033a:	4293      	cmp	r3, r2
 800033c:	d106      	bne.n	800034c <GPIO_PeriClockControl+0xac>
						GPIOG_PCLK_EN;
 800033e:	4b55      	ldr	r3, [pc, #340]	@ (8000494 <GPIO_PeriClockControl+0x1f4>)
 8000340:	691b      	ldr	r3, [r3, #16]
 8000342:	4a54      	ldr	r2, [pc, #336]	@ (8000494 <GPIO_PeriClockControl+0x1f4>)
 8000344:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000348:	6113      	str	r3, [r2, #16]
}
 800034a:	e09b      	b.n	8000484 <GPIO_PeriClockControl+0x1e4>
			else if(PGPIOx== GPIOH)
 800034c:	687b      	ldr	r3, [r7, #4]
 800034e:	4a58      	ldr	r2, [pc, #352]	@ (80004b0 <GPIO_PeriClockControl+0x210>)
 8000350:	4293      	cmp	r3, r2
 8000352:	d106      	bne.n	8000362 <GPIO_PeriClockControl+0xc2>
						GPIOH_PCLK_EN;
 8000354:	4b4f      	ldr	r3, [pc, #316]	@ (8000494 <GPIO_PeriClockControl+0x1f4>)
 8000356:	691b      	ldr	r3, [r3, #16]
 8000358:	4a4e      	ldr	r2, [pc, #312]	@ (8000494 <GPIO_PeriClockControl+0x1f4>)
 800035a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800035e:	6113      	str	r3, [r2, #16]
}
 8000360:	e090      	b.n	8000484 <GPIO_PeriClockControl+0x1e4>
			else if(PGPIOx== GPIOI)
 8000362:	687b      	ldr	r3, [r7, #4]
 8000364:	4a53      	ldr	r2, [pc, #332]	@ (80004b4 <GPIO_PeriClockControl+0x214>)
 8000366:	4293      	cmp	r3, r2
 8000368:	d106      	bne.n	8000378 <GPIO_PeriClockControl+0xd8>
						GPIOI_PCLK_EN;
 800036a:	4b4a      	ldr	r3, [pc, #296]	@ (8000494 <GPIO_PeriClockControl+0x1f4>)
 800036c:	691b      	ldr	r3, [r3, #16]
 800036e:	4a49      	ldr	r2, [pc, #292]	@ (8000494 <GPIO_PeriClockControl+0x1f4>)
 8000370:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000374:	6113      	str	r3, [r2, #16]
}
 8000376:	e085      	b.n	8000484 <GPIO_PeriClockControl+0x1e4>
			else if(PGPIOx== GPIOJ)
 8000378:	687b      	ldr	r3, [r7, #4]
 800037a:	4a4f      	ldr	r2, [pc, #316]	@ (80004b8 <GPIO_PeriClockControl+0x218>)
 800037c:	4293      	cmp	r3, r2
 800037e:	d106      	bne.n	800038e <GPIO_PeriClockControl+0xee>
						GPIOJ_PCLK_EN;
 8000380:	4b44      	ldr	r3, [pc, #272]	@ (8000494 <GPIO_PeriClockControl+0x1f4>)
 8000382:	691b      	ldr	r3, [r3, #16]
 8000384:	4a43      	ldr	r2, [pc, #268]	@ (8000494 <GPIO_PeriClockControl+0x1f4>)
 8000386:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800038a:	6113      	str	r3, [r2, #16]
}
 800038c:	e07a      	b.n	8000484 <GPIO_PeriClockControl+0x1e4>
						GPIOI_PCLK_EN;
 800038e:	4b41      	ldr	r3, [pc, #260]	@ (8000494 <GPIO_PeriClockControl+0x1f4>)
 8000390:	691b      	ldr	r3, [r3, #16]
 8000392:	4a40      	ldr	r2, [pc, #256]	@ (8000494 <GPIO_PeriClockControl+0x1f4>)
 8000394:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000398:	6113      	str	r3, [r2, #16]
}
 800039a:	e073      	b.n	8000484 <GPIO_PeriClockControl+0x1e4>
					if(PGPIOx== GPIOA)
 800039c:	687b      	ldr	r3, [r7, #4]
 800039e:	4a3c      	ldr	r2, [pc, #240]	@ (8000490 <GPIO_PeriClockControl+0x1f0>)
 80003a0:	4293      	cmp	r3, r2
 80003a2:	d106      	bne.n	80003b2 <GPIO_PeriClockControl+0x112>
								GPIOA_PCLK_DI;
 80003a4:	4b3b      	ldr	r3, [pc, #236]	@ (8000494 <GPIO_PeriClockControl+0x1f4>)
 80003a6:	691b      	ldr	r3, [r3, #16]
 80003a8:	4a3a      	ldr	r2, [pc, #232]	@ (8000494 <GPIO_PeriClockControl+0x1f4>)
 80003aa:	f023 0301 	bic.w	r3, r3, #1
 80003ae:	6113      	str	r3, [r2, #16]
}
 80003b0:	e068      	b.n	8000484 <GPIO_PeriClockControl+0x1e4>
					else if(PGPIOx== GPIOB)
 80003b2:	687b      	ldr	r3, [r7, #4]
 80003b4:	4a38      	ldr	r2, [pc, #224]	@ (8000498 <GPIO_PeriClockControl+0x1f8>)
 80003b6:	4293      	cmp	r3, r2
 80003b8:	d106      	bne.n	80003c8 <GPIO_PeriClockControl+0x128>
								GPIOB_PCLK_DI;
 80003ba:	4b36      	ldr	r3, [pc, #216]	@ (8000494 <GPIO_PeriClockControl+0x1f4>)
 80003bc:	691b      	ldr	r3, [r3, #16]
 80003be:	4a35      	ldr	r2, [pc, #212]	@ (8000494 <GPIO_PeriClockControl+0x1f4>)
 80003c0:	f023 0302 	bic.w	r3, r3, #2
 80003c4:	6113      	str	r3, [r2, #16]
}
 80003c6:	e05d      	b.n	8000484 <GPIO_PeriClockControl+0x1e4>
					else if(PGPIOx== GPIOC)
 80003c8:	687b      	ldr	r3, [r7, #4]
 80003ca:	4a34      	ldr	r2, [pc, #208]	@ (800049c <GPIO_PeriClockControl+0x1fc>)
 80003cc:	4293      	cmp	r3, r2
 80003ce:	d106      	bne.n	80003de <GPIO_PeriClockControl+0x13e>
								GPIOC_PCLK_DI;
 80003d0:	4b30      	ldr	r3, [pc, #192]	@ (8000494 <GPIO_PeriClockControl+0x1f4>)
 80003d2:	691b      	ldr	r3, [r3, #16]
 80003d4:	4a2f      	ldr	r2, [pc, #188]	@ (8000494 <GPIO_PeriClockControl+0x1f4>)
 80003d6:	f023 0304 	bic.w	r3, r3, #4
 80003da:	6113      	str	r3, [r2, #16]
}
 80003dc:	e052      	b.n	8000484 <GPIO_PeriClockControl+0x1e4>
					else if(PGPIOx== GPIOD){
 80003de:	687b      	ldr	r3, [r7, #4]
 80003e0:	4a2f      	ldr	r2, [pc, #188]	@ (80004a0 <GPIO_PeriClockControl+0x200>)
 80003e2:	4293      	cmp	r3, r2
 80003e4:	d106      	bne.n	80003f4 <GPIO_PeriClockControl+0x154>
								GPIOD_PCLK_DI;
 80003e6:	4b2b      	ldr	r3, [pc, #172]	@ (8000494 <GPIO_PeriClockControl+0x1f4>)
 80003e8:	691b      	ldr	r3, [r3, #16]
 80003ea:	4a2a      	ldr	r2, [pc, #168]	@ (8000494 <GPIO_PeriClockControl+0x1f4>)
 80003ec:	f023 0308 	bic.w	r3, r3, #8
 80003f0:	6113      	str	r3, [r2, #16]
}
 80003f2:	e047      	b.n	8000484 <GPIO_PeriClockControl+0x1e4>
					else if(PGPIOx== GPIOE)
 80003f4:	687b      	ldr	r3, [r7, #4]
 80003f6:	4a2b      	ldr	r2, [pc, #172]	@ (80004a4 <GPIO_PeriClockControl+0x204>)
 80003f8:	4293      	cmp	r3, r2
 80003fa:	d106      	bne.n	800040a <GPIO_PeriClockControl+0x16a>
								GPIOE_PCLK_DI;
 80003fc:	4b25      	ldr	r3, [pc, #148]	@ (8000494 <GPIO_PeriClockControl+0x1f4>)
 80003fe:	691b      	ldr	r3, [r3, #16]
 8000400:	4a24      	ldr	r2, [pc, #144]	@ (8000494 <GPIO_PeriClockControl+0x1f4>)
 8000402:	f023 0310 	bic.w	r3, r3, #16
 8000406:	6113      	str	r3, [r2, #16]
}
 8000408:	e03c      	b.n	8000484 <GPIO_PeriClockControl+0x1e4>
					else if(PGPIOx== GPIOF)
 800040a:	687b      	ldr	r3, [r7, #4]
 800040c:	4a26      	ldr	r2, [pc, #152]	@ (80004a8 <GPIO_PeriClockControl+0x208>)
 800040e:	4293      	cmp	r3, r2
 8000410:	d106      	bne.n	8000420 <GPIO_PeriClockControl+0x180>
								GPIOF_PCLK_DI;
 8000412:	4b20      	ldr	r3, [pc, #128]	@ (8000494 <GPIO_PeriClockControl+0x1f4>)
 8000414:	691b      	ldr	r3, [r3, #16]
 8000416:	4a1f      	ldr	r2, [pc, #124]	@ (8000494 <GPIO_PeriClockControl+0x1f4>)
 8000418:	f023 0320 	bic.w	r3, r3, #32
 800041c:	6113      	str	r3, [r2, #16]
}
 800041e:	e031      	b.n	8000484 <GPIO_PeriClockControl+0x1e4>
					else if(PGPIOx== GPIOG)
 8000420:	687b      	ldr	r3, [r7, #4]
 8000422:	4a22      	ldr	r2, [pc, #136]	@ (80004ac <GPIO_PeriClockControl+0x20c>)
 8000424:	4293      	cmp	r3, r2
 8000426:	d106      	bne.n	8000436 <GPIO_PeriClockControl+0x196>
								GPIOG_PCLK_DI;
 8000428:	4b1a      	ldr	r3, [pc, #104]	@ (8000494 <GPIO_PeriClockControl+0x1f4>)
 800042a:	691b      	ldr	r3, [r3, #16]
 800042c:	4a19      	ldr	r2, [pc, #100]	@ (8000494 <GPIO_PeriClockControl+0x1f4>)
 800042e:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8000432:	6113      	str	r3, [r2, #16]
}
 8000434:	e026      	b.n	8000484 <GPIO_PeriClockControl+0x1e4>
					else if(PGPIOx== GPIOH)
 8000436:	687b      	ldr	r3, [r7, #4]
 8000438:	4a1d      	ldr	r2, [pc, #116]	@ (80004b0 <GPIO_PeriClockControl+0x210>)
 800043a:	4293      	cmp	r3, r2
 800043c:	d106      	bne.n	800044c <GPIO_PeriClockControl+0x1ac>
								GPIOH_PCLK_DI;
 800043e:	4b15      	ldr	r3, [pc, #84]	@ (8000494 <GPIO_PeriClockControl+0x1f4>)
 8000440:	691b      	ldr	r3, [r3, #16]
 8000442:	4a14      	ldr	r2, [pc, #80]	@ (8000494 <GPIO_PeriClockControl+0x1f4>)
 8000444:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8000448:	6113      	str	r3, [r2, #16]
}
 800044a:	e01b      	b.n	8000484 <GPIO_PeriClockControl+0x1e4>
					else if(PGPIOx== GPIOI)
 800044c:	687b      	ldr	r3, [r7, #4]
 800044e:	4a19      	ldr	r2, [pc, #100]	@ (80004b4 <GPIO_PeriClockControl+0x214>)
 8000450:	4293      	cmp	r3, r2
 8000452:	d106      	bne.n	8000462 <GPIO_PeriClockControl+0x1c2>
								GPIOI_PCLK_DI;
 8000454:	4b0f      	ldr	r3, [pc, #60]	@ (8000494 <GPIO_PeriClockControl+0x1f4>)
 8000456:	691b      	ldr	r3, [r3, #16]
 8000458:	4a0e      	ldr	r2, [pc, #56]	@ (8000494 <GPIO_PeriClockControl+0x1f4>)
 800045a:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800045e:	6113      	str	r3, [r2, #16]
}
 8000460:	e010      	b.n	8000484 <GPIO_PeriClockControl+0x1e4>
					else if(PGPIOx== GPIOK)
 8000462:	687b      	ldr	r3, [r7, #4]
 8000464:	4a15      	ldr	r2, [pc, #84]	@ (80004bc <GPIO_PeriClockControl+0x21c>)
 8000466:	4293      	cmp	r3, r2
 8000468:	d106      	bne.n	8000478 <GPIO_PeriClockControl+0x1d8>
								GPIOJ_PCLK_DI;
 800046a:	4b0a      	ldr	r3, [pc, #40]	@ (8000494 <GPIO_PeriClockControl+0x1f4>)
 800046c:	691b      	ldr	r3, [r3, #16]
 800046e:	4a09      	ldr	r2, [pc, #36]	@ (8000494 <GPIO_PeriClockControl+0x1f4>)
 8000470:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8000474:	6113      	str	r3, [r2, #16]
}
 8000476:	e005      	b.n	8000484 <GPIO_PeriClockControl+0x1e4>
								GPIOI_PCLK_DI;
 8000478:	4b06      	ldr	r3, [pc, #24]	@ (8000494 <GPIO_PeriClockControl+0x1f4>)
 800047a:	691b      	ldr	r3, [r3, #16]
 800047c:	4a05      	ldr	r2, [pc, #20]	@ (8000494 <GPIO_PeriClockControl+0x1f4>)
 800047e:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8000482:	6113      	str	r3, [r2, #16]
}
 8000484:	bf00      	nop
 8000486:	370c      	adds	r7, #12
 8000488:	46bd      	mov	sp, r7
 800048a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800048e:	4770      	bx	lr
 8000490:	40020000 	.word	0x40020000
 8000494:	401fc000 	.word	0x401fc000
 8000498:	4002a000 	.word	0x4002a000
 800049c:	40034000 	.word	0x40034000
 80004a0:	4003e000 	.word	0x4003e000
 80004a4:	40048000 	.word	0x40048000
 80004a8:	40052000 	.word	0x40052000
 80004ac:	4005c000 	.word	0x4005c000
 80004b0:	40066000 	.word	0x40066000
 80004b4:	40070000 	.word	0x40070000
 80004b8:	4007a000 	.word	0x4007a000
 80004bc:	40084000 	.word	0x40084000

080004c0 <GPIO_BASEADDR_TO_CODE>:
uint8_t GPIO_BASEADDR_TO_CODE(GPIO_RegDef_t *PGPIOx)
{
 80004c0:	b480      	push	{r7}
 80004c2:	b083      	sub	sp, #12
 80004c4:	af00      	add	r7, sp, #0
 80004c6:	6078      	str	r0, [r7, #4]
	if(PGPIOx== GPIOA)
 80004c8:	687b      	ldr	r3, [r7, #4]
 80004ca:	4a21      	ldr	r2, [pc, #132]	@ (8000550 <GPIO_BASEADDR_TO_CODE+0x90>)
 80004cc:	4293      	cmp	r3, r2
 80004ce:	d101      	bne.n	80004d4 <GPIO_BASEADDR_TO_CODE+0x14>
	{
		return 0;
 80004d0:	2300      	movs	r3, #0
 80004d2:	e036      	b.n	8000542 <GPIO_BASEADDR_TO_CODE+0x82>
	}
	else if(PGPIOx== GPIOB)
 80004d4:	687b      	ldr	r3, [r7, #4]
 80004d6:	4a1f      	ldr	r2, [pc, #124]	@ (8000554 <GPIO_BASEADDR_TO_CODE+0x94>)
 80004d8:	4293      	cmp	r3, r2
 80004da:	d101      	bne.n	80004e0 <GPIO_BASEADDR_TO_CODE+0x20>
	{
		return 1;
 80004dc:	2301      	movs	r3, #1
 80004de:	e030      	b.n	8000542 <GPIO_BASEADDR_TO_CODE+0x82>
	}
	else if(PGPIOx== GPIOC)
 80004e0:	687b      	ldr	r3, [r7, #4]
 80004e2:	4a1d      	ldr	r2, [pc, #116]	@ (8000558 <GPIO_BASEADDR_TO_CODE+0x98>)
 80004e4:	4293      	cmp	r3, r2
 80004e6:	d101      	bne.n	80004ec <GPIO_BASEADDR_TO_CODE+0x2c>
	{
		return 2;
 80004e8:	2302      	movs	r3, #2
 80004ea:	e02a      	b.n	8000542 <GPIO_BASEADDR_TO_CODE+0x82>
	}
	else if(PGPIOx== GPIOD){
 80004ec:	687b      	ldr	r3, [r7, #4]
 80004ee:	4a1b      	ldr	r2, [pc, #108]	@ (800055c <GPIO_BASEADDR_TO_CODE+0x9c>)
 80004f0:	4293      	cmp	r3, r2
 80004f2:	d101      	bne.n	80004f8 <GPIO_BASEADDR_TO_CODE+0x38>
		return 3;
 80004f4:	2303      	movs	r3, #3
 80004f6:	e024      	b.n	8000542 <GPIO_BASEADDR_TO_CODE+0x82>
	}
	else if(PGPIOx== GPIOE)
 80004f8:	687b      	ldr	r3, [r7, #4]
 80004fa:	4a19      	ldr	r2, [pc, #100]	@ (8000560 <GPIO_BASEADDR_TO_CODE+0xa0>)
 80004fc:	4293      	cmp	r3, r2
 80004fe:	d101      	bne.n	8000504 <GPIO_BASEADDR_TO_CODE+0x44>
	{
		return 4;
 8000500:	2304      	movs	r3, #4
 8000502:	e01e      	b.n	8000542 <GPIO_BASEADDR_TO_CODE+0x82>
	}
	else if(PGPIOx== GPIOF)
 8000504:	687b      	ldr	r3, [r7, #4]
 8000506:	4a17      	ldr	r2, [pc, #92]	@ (8000564 <GPIO_BASEADDR_TO_CODE+0xa4>)
 8000508:	4293      	cmp	r3, r2
 800050a:	d101      	bne.n	8000510 <GPIO_BASEADDR_TO_CODE+0x50>
	{
		return 5;
 800050c:	2305      	movs	r3, #5
 800050e:	e018      	b.n	8000542 <GPIO_BASEADDR_TO_CODE+0x82>
	}
	else if(PGPIOx== GPIOG)
 8000510:	687b      	ldr	r3, [r7, #4]
 8000512:	4a15      	ldr	r2, [pc, #84]	@ (8000568 <GPIO_BASEADDR_TO_CODE+0xa8>)
 8000514:	4293      	cmp	r3, r2
 8000516:	d101      	bne.n	800051c <GPIO_BASEADDR_TO_CODE+0x5c>
	{
		return 6;
 8000518:	2306      	movs	r3, #6
 800051a:	e012      	b.n	8000542 <GPIO_BASEADDR_TO_CODE+0x82>
	}
	else if(PGPIOx== GPIOH)
 800051c:	687b      	ldr	r3, [r7, #4]
 800051e:	4a13      	ldr	r2, [pc, #76]	@ (800056c <GPIO_BASEADDR_TO_CODE+0xac>)
 8000520:	4293      	cmp	r3, r2
 8000522:	d101      	bne.n	8000528 <GPIO_BASEADDR_TO_CODE+0x68>
	{
		return 7;
 8000524:	2307      	movs	r3, #7
 8000526:	e00c      	b.n	8000542 <GPIO_BASEADDR_TO_CODE+0x82>
	}
	else if(PGPIOx== GPIOG)
 8000528:	687b      	ldr	r3, [r7, #4]
 800052a:	4a0f      	ldr	r2, [pc, #60]	@ (8000568 <GPIO_BASEADDR_TO_CODE+0xa8>)
 800052c:	4293      	cmp	r3, r2
 800052e:	d101      	bne.n	8000534 <GPIO_BASEADDR_TO_CODE+0x74>
	{
		return 8;
 8000530:	2308      	movs	r3, #8
 8000532:	e006      	b.n	8000542 <GPIO_BASEADDR_TO_CODE+0x82>
	}
	else if(PGPIOx== GPIOH)
 8000534:	687b      	ldr	r3, [r7, #4]
 8000536:	4a0d      	ldr	r2, [pc, #52]	@ (800056c <GPIO_BASEADDR_TO_CODE+0xac>)
 8000538:	4293      	cmp	r3, r2
 800053a:	d101      	bne.n	8000540 <GPIO_BASEADDR_TO_CODE+0x80>
	{
		return 9;
 800053c:	2309      	movs	r3, #9
 800053e:	e000      	b.n	8000542 <GPIO_BASEADDR_TO_CODE+0x82>
	}
	else
	{
		return 10;
 8000540:	230a      	movs	r3, #10
	}
	return 0;
}
 8000542:	4618      	mov	r0, r3
 8000544:	370c      	adds	r7, #12
 8000546:	46bd      	mov	sp, r7
 8000548:	f85d 7b04 	ldr.w	r7, [sp], #4
 800054c:	4770      	bx	lr
 800054e:	bf00      	nop
 8000550:	40020000 	.word	0x40020000
 8000554:	4002a000 	.word	0x4002a000
 8000558:	40034000 	.word	0x40034000
 800055c:	4003e000 	.word	0x4003e000
 8000560:	40048000 	.word	0x40048000
 8000564:	40052000 	.word	0x40052000
 8000568:	4005c000 	.word	0x4005c000
 800056c:	40066000 	.word	0x40066000

08000570 <GPIO_Init>:
/* Init and DeInit*/
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 8000570:	b580      	push	{r7, lr}
 8000572:	b086      	sub	sp, #24
 8000574:	af00      	add	r7, sp, #0
 8000576:	6078      	str	r0, [r7, #4]
	uint32_t temp=0;
 8000578:	2300      	movs	r3, #0
 800057a:	617b      	str	r3, [r7, #20]
	//1. configure mode
	if(pGPIOHandle->GPIO_PinConfig.GPIO_Mode<=GPIO_MODE_ANALOG)
 800057c:	687b      	ldr	r3, [r7, #4]
 800057e:	795b      	ldrb	r3, [r3, #5]
 8000580:	2b03      	cmp	r3, #3
 8000582:	d81f      	bhi.n	80005c4 <GPIO_Init+0x54>
	{
		//non interrupt mode
		temp= pGPIOHandle->GPIO_PinConfig.GPIO_Mode << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000584:	687b      	ldr	r3, [r7, #4]
 8000586:	795b      	ldrb	r3, [r3, #5]
 8000588:	461a      	mov	r2, r3
 800058a:	687b      	ldr	r3, [r7, #4]
 800058c:	791b      	ldrb	r3, [r3, #4]
 800058e:	005b      	lsls	r3, r3, #1
 8000590:	fa02 f303 	lsl.w	r3, r2, r3
 8000594:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIO->MODER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //Clearing corresponding 2 bits
 8000596:	687b      	ldr	r3, [r7, #4]
 8000598:	681b      	ldr	r3, [r3, #0]
 800059a:	681a      	ldr	r2, [r3, #0]
 800059c:	687b      	ldr	r3, [r7, #4]
 800059e:	791b      	ldrb	r3, [r3, #4]
 80005a0:	4619      	mov	r1, r3
 80005a2:	2303      	movs	r3, #3
 80005a4:	408b      	lsls	r3, r1
 80005a6:	43db      	mvns	r3, r3
 80005a8:	4619      	mov	r1, r3
 80005aa:	687b      	ldr	r3, [r7, #4]
 80005ac:	681b      	ldr	r3, [r3, #0]
 80005ae:	400a      	ands	r2, r1
 80005b0:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIO->MODER |= temp; //setting
 80005b2:	687b      	ldr	r3, [r7, #4]
 80005b4:	681b      	ldr	r3, [r3, #0]
 80005b6:	6819      	ldr	r1, [r3, #0]
 80005b8:	687b      	ldr	r3, [r7, #4]
 80005ba:	681b      	ldr	r3, [r3, #0]
 80005bc:	697a      	ldr	r2, [r7, #20]
 80005be:	430a      	orrs	r2, r1
 80005c0:	601a      	str	r2, [r3, #0]
 80005c2:	e07d      	b.n	80006c0 <GPIO_Init+0x150>
	}
	else
	{
		 /* 1. configure Falling or Rasing Trigger in EXTI*/
		if(pGPIOHandle->GPIO_PinConfig.GPIO_Mode==GPIO_MODE_IT_FT)
 80005c4:	687b      	ldr	r3, [r7, #4]
 80005c6:	795b      	ldrb	r3, [r3, #5]
 80005c8:	2b05      	cmp	r3, #5
 80005ca:	d117      	bne.n	80005fc <GPIO_Init+0x8c>
		{
			(EXTI)->EXTI_RTSR &= ~(1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005cc:	4b96      	ldr	r3, [pc, #600]	@ (8000828 <GPIO_Init+0x2b8>)
 80005ce:	689b      	ldr	r3, [r3, #8]
 80005d0:	687a      	ldr	r2, [r7, #4]
 80005d2:	7912      	ldrb	r2, [r2, #4]
 80005d4:	4611      	mov	r1, r2
 80005d6:	2201      	movs	r2, #1
 80005d8:	408a      	lsls	r2, r1
 80005da:	43d2      	mvns	r2, r2
 80005dc:	4611      	mov	r1, r2
 80005de:	4a92      	ldr	r2, [pc, #584]	@ (8000828 <GPIO_Init+0x2b8>)
 80005e0:	400b      	ands	r3, r1
 80005e2:	6093      	str	r3, [r2, #8]
			(EXTI)->EXTI_FTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005e4:	4b90      	ldr	r3, [pc, #576]	@ (8000828 <GPIO_Init+0x2b8>)
 80005e6:	68db      	ldr	r3, [r3, #12]
 80005e8:	687a      	ldr	r2, [r7, #4]
 80005ea:	7912      	ldrb	r2, [r2, #4]
 80005ec:	4611      	mov	r1, r2
 80005ee:	2201      	movs	r2, #1
 80005f0:	408a      	lsls	r2, r1
 80005f2:	4611      	mov	r1, r2
 80005f4:	4a8c      	ldr	r2, [pc, #560]	@ (8000828 <GPIO_Init+0x2b8>)
 80005f6:	430b      	orrs	r3, r1
 80005f8:	60d3      	str	r3, [r2, #12]
 80005fa:	e031      	b.n	8000660 <GPIO_Init+0xf0>
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_Mode==GPIO_MODE_IT_RT)
 80005fc:	687b      	ldr	r3, [r7, #4]
 80005fe:	795b      	ldrb	r3, [r3, #5]
 8000600:	2b06      	cmp	r3, #6
 8000602:	d117      	bne.n	8000634 <GPIO_Init+0xc4>
		{
			(EXTI)->EXTI_FTSR &= ~(1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000604:	4b88      	ldr	r3, [pc, #544]	@ (8000828 <GPIO_Init+0x2b8>)
 8000606:	68db      	ldr	r3, [r3, #12]
 8000608:	687a      	ldr	r2, [r7, #4]
 800060a:	7912      	ldrb	r2, [r2, #4]
 800060c:	4611      	mov	r1, r2
 800060e:	2201      	movs	r2, #1
 8000610:	408a      	lsls	r2, r1
 8000612:	43d2      	mvns	r2, r2
 8000614:	4611      	mov	r1, r2
 8000616:	4a84      	ldr	r2, [pc, #528]	@ (8000828 <GPIO_Init+0x2b8>)
 8000618:	400b      	ands	r3, r1
 800061a:	60d3      	str	r3, [r2, #12]
			(EXTI)->EXTI_RTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800061c:	4b82      	ldr	r3, [pc, #520]	@ (8000828 <GPIO_Init+0x2b8>)
 800061e:	689b      	ldr	r3, [r3, #8]
 8000620:	687a      	ldr	r2, [r7, #4]
 8000622:	7912      	ldrb	r2, [r2, #4]
 8000624:	4611      	mov	r1, r2
 8000626:	2201      	movs	r2, #1
 8000628:	408a      	lsls	r2, r1
 800062a:	4611      	mov	r1, r2
 800062c:	4a7e      	ldr	r2, [pc, #504]	@ (8000828 <GPIO_Init+0x2b8>)
 800062e:	430b      	orrs	r3, r1
 8000630:	6093      	str	r3, [r2, #8]
 8000632:	e015      	b.n	8000660 <GPIO_Init+0xf0>
		}
		else
		{
			(EXTI)->EXTI_FTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000634:	4b7c      	ldr	r3, [pc, #496]	@ (8000828 <GPIO_Init+0x2b8>)
 8000636:	68db      	ldr	r3, [r3, #12]
 8000638:	687a      	ldr	r2, [r7, #4]
 800063a:	7912      	ldrb	r2, [r2, #4]
 800063c:	4611      	mov	r1, r2
 800063e:	2201      	movs	r2, #1
 8000640:	408a      	lsls	r2, r1
 8000642:	4611      	mov	r1, r2
 8000644:	4a78      	ldr	r2, [pc, #480]	@ (8000828 <GPIO_Init+0x2b8>)
 8000646:	430b      	orrs	r3, r1
 8000648:	60d3      	str	r3, [r2, #12]
			(EXTI)->EXTI_RTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800064a:	4b77      	ldr	r3, [pc, #476]	@ (8000828 <GPIO_Init+0x2b8>)
 800064c:	689b      	ldr	r3, [r3, #8]
 800064e:	687a      	ldr	r2, [r7, #4]
 8000650:	7912      	ldrb	r2, [r2, #4]
 8000652:	4611      	mov	r1, r2
 8000654:	2201      	movs	r2, #1
 8000656:	408a      	lsls	r2, r1
 8000658:	4611      	mov	r1, r2
 800065a:	4a73      	ldr	r2, [pc, #460]	@ (8000828 <GPIO_Init+0x2b8>)
 800065c:	430b      	orrs	r3, r1
 800065e:	6093      	str	r3, [r2, #8]
		}
		/*2.configure the GPIO port selection in SYSCFG_EXTICR*/
		uint8_t temp1= pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber/4;
 8000660:	687b      	ldr	r3, [r7, #4]
 8000662:	791b      	ldrb	r3, [r3, #4]
 8000664:	089b      	lsrs	r3, r3, #2
 8000666:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2= pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber%4;
 8000668:	687b      	ldr	r3, [r7, #4]
 800066a:	791b      	ldrb	r3, [r3, #4]
 800066c:	f003 0303 	and.w	r3, r3, #3
 8000670:	74bb      	strb	r3, [r7, #18]
		uint32_t portcode=GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIO);
 8000672:	687b      	ldr	r3, [r7, #4]
 8000674:	681b      	ldr	r3, [r3, #0]
 8000676:	4618      	mov	r0, r3
 8000678:	f7ff ff22 	bl	80004c0 <GPIO_BASEADDR_TO_CODE>
 800067c:	4603      	mov	r3, r0
 800067e:	60fb      	str	r3, [r7, #12]
		SYSCFG_PCLK_EN; //enable SYSCFG_pheripheral clock
 8000680:	4b6a      	ldr	r3, [pc, #424]	@ (800082c <GPIO_Init+0x2bc>)
 8000682:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8000684:	4a69      	ldr	r2, [pc, #420]	@ (800082c <GPIO_Init+0x2bc>)
 8000686:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800068a:	6653      	str	r3, [r2, #100]	@ 0x64
		(SYSCFG)->SYSCFG_EXTICR[temp1] |= portcode<<(temp2*4);
 800068c:	4a68      	ldr	r2, [pc, #416]	@ (8000830 <GPIO_Init+0x2c0>)
 800068e:	7cfb      	ldrb	r3, [r7, #19]
 8000690:	3302      	adds	r3, #2
 8000692:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 8000696:	7cbb      	ldrb	r3, [r7, #18]
 8000698:	009b      	lsls	r3, r3, #2
 800069a:	68fa      	ldr	r2, [r7, #12]
 800069c:	409a      	lsls	r2, r3
 800069e:	4864      	ldr	r0, [pc, #400]	@ (8000830 <GPIO_Init+0x2c0>)
 80006a0:	7cfb      	ldrb	r3, [r7, #19]
 80006a2:	430a      	orrs	r2, r1
 80006a4:	3302      	adds	r3, #2
 80006a6:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
		/*3.configure the IMR(Interrupt Mask Register)in EXTI*/
		(EXTI)->EXTI_IMR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80006aa:	4b5f      	ldr	r3, [pc, #380]	@ (8000828 <GPIO_Init+0x2b8>)
 80006ac:	681b      	ldr	r3, [r3, #0]
 80006ae:	687a      	ldr	r2, [r7, #4]
 80006b0:	7912      	ldrb	r2, [r2, #4]
 80006b2:	4611      	mov	r1, r2
 80006b4:	2201      	movs	r2, #1
 80006b6:	408a      	lsls	r2, r1
 80006b8:	4611      	mov	r1, r2
 80006ba:	4a5b      	ldr	r2, [pc, #364]	@ (8000828 <GPIO_Init+0x2b8>)
 80006bc:	430b      	orrs	r3, r1
 80006be:	6013      	str	r3, [r2, #0]


	}

	//2. configure speed
	temp=0;
 80006c0:	2300      	movs	r3, #0
 80006c2:	617b      	str	r3, [r7, #20]
	temp= pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80006c4:	687b      	ldr	r3, [r7, #4]
 80006c6:	799b      	ldrb	r3, [r3, #6]
 80006c8:	461a      	mov	r2, r3
 80006ca:	687b      	ldr	r3, [r7, #4]
 80006cc:	791b      	ldrb	r3, [r3, #4]
 80006ce:	005b      	lsls	r3, r3, #1
 80006d0:	fa02 f303 	lsl.w	r3, r2, r3
 80006d4:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIO->OSPEEDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80006d6:	687b      	ldr	r3, [r7, #4]
 80006d8:	681b      	ldr	r3, [r3, #0]
 80006da:	689a      	ldr	r2, [r3, #8]
 80006dc:	687b      	ldr	r3, [r7, #4]
 80006de:	791b      	ldrb	r3, [r3, #4]
 80006e0:	4619      	mov	r1, r3
 80006e2:	2303      	movs	r3, #3
 80006e4:	408b      	lsls	r3, r1
 80006e6:	43db      	mvns	r3, r3
 80006e8:	4619      	mov	r1, r3
 80006ea:	687b      	ldr	r3, [r7, #4]
 80006ec:	681b      	ldr	r3, [r3, #0]
 80006ee:	400a      	ands	r2, r1
 80006f0:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIO->OSPEEDR |= temp;
 80006f2:	687b      	ldr	r3, [r7, #4]
 80006f4:	681b      	ldr	r3, [r3, #0]
 80006f6:	6899      	ldr	r1, [r3, #8]
 80006f8:	687b      	ldr	r3, [r7, #4]
 80006fa:	681b      	ldr	r3, [r3, #0]
 80006fc:	697a      	ldr	r2, [r7, #20]
 80006fe:	430a      	orrs	r2, r1
 8000700:	609a      	str	r2, [r3, #8]

	//3. configure pull up pull down
	temp=0;
 8000702:	2300      	movs	r3, #0
 8000704:	617b      	str	r3, [r7, #20]
	temp= pGPIOHandle->GPIO_PinConfig.GPIO_PuPdControl << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000706:	687b      	ldr	r3, [r7, #4]
 8000708:	79db      	ldrb	r3, [r3, #7]
 800070a:	461a      	mov	r2, r3
 800070c:	687b      	ldr	r3, [r7, #4]
 800070e:	791b      	ldrb	r3, [r3, #4]
 8000710:	005b      	lsls	r3, r3, #1
 8000712:	fa02 f303 	lsl.w	r3, r2, r3
 8000716:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIO->PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000718:	687b      	ldr	r3, [r7, #4]
 800071a:	681b      	ldr	r3, [r3, #0]
 800071c:	68da      	ldr	r2, [r3, #12]
 800071e:	687b      	ldr	r3, [r7, #4]
 8000720:	791b      	ldrb	r3, [r3, #4]
 8000722:	4619      	mov	r1, r3
 8000724:	2303      	movs	r3, #3
 8000726:	408b      	lsls	r3, r1
 8000728:	43db      	mvns	r3, r3
 800072a:	4619      	mov	r1, r3
 800072c:	687b      	ldr	r3, [r7, #4]
 800072e:	681b      	ldr	r3, [r3, #0]
 8000730:	400a      	ands	r2, r1
 8000732:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIO->PUPDR |= temp;
 8000734:	687b      	ldr	r3, [r7, #4]
 8000736:	681b      	ldr	r3, [r3, #0]
 8000738:	68d9      	ldr	r1, [r3, #12]
 800073a:	687b      	ldr	r3, [r7, #4]
 800073c:	681b      	ldr	r3, [r3, #0]
 800073e:	697a      	ldr	r2, [r7, #20]
 8000740:	430a      	orrs	r2, r1
 8000742:	60da      	str	r2, [r3, #12]

	//4. configure the output type
	temp=0;
 8000744:	2300      	movs	r3, #0
 8000746:	617b      	str	r3, [r7, #20]
	temp= pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000748:	687b      	ldr	r3, [r7, #4]
 800074a:	7a1b      	ldrb	r3, [r3, #8]
 800074c:	461a      	mov	r2, r3
 800074e:	687b      	ldr	r3, [r7, #4]
 8000750:	791b      	ldrb	r3, [r3, #4]
 8000752:	fa02 f303 	lsl.w	r3, r2, r3
 8000756:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIO->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000758:	687b      	ldr	r3, [r7, #4]
 800075a:	681b      	ldr	r3, [r3, #0]
 800075c:	685a      	ldr	r2, [r3, #4]
 800075e:	687b      	ldr	r3, [r7, #4]
 8000760:	791b      	ldrb	r3, [r3, #4]
 8000762:	4619      	mov	r1, r3
 8000764:	2301      	movs	r3, #1
 8000766:	408b      	lsls	r3, r1
 8000768:	43db      	mvns	r3, r3
 800076a:	4619      	mov	r1, r3
 800076c:	687b      	ldr	r3, [r7, #4]
 800076e:	681b      	ldr	r3, [r3, #0]
 8000770:	400a      	ands	r2, r1
 8000772:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIO->OTYPER |= temp;
 8000774:	687b      	ldr	r3, [r7, #4]
 8000776:	681b      	ldr	r3, [r3, #0]
 8000778:	6859      	ldr	r1, [r3, #4]
 800077a:	687b      	ldr	r3, [r7, #4]
 800077c:	681b      	ldr	r3, [r3, #0]
 800077e:	697a      	ldr	r2, [r7, #20]
 8000780:	430a      	orrs	r2, r1
 8000782:	605a      	str	r2, [r3, #4]

	// 5. configure alternate functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_Mode<=GPIO_MODE_ALTF)
 8000784:	687b      	ldr	r3, [r7, #4]
 8000786:	795b      	ldrb	r3, [r3, #5]
 8000788:	2b02      	cmp	r3, #2
 800078a:	d848      	bhi.n	800081e <GPIO_Init+0x2ae>
	{
		temp=0;
 800078c:	2300      	movs	r3, #0
 800078e:	617b      	str	r3, [r7, #20]
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber<GPIO_PIN_8)
 8000790:	687b      	ldr	r3, [r7, #4]
 8000792:	791b      	ldrb	r3, [r3, #4]
 8000794:	2b07      	cmp	r3, #7
 8000796:	d820      	bhi.n	80007da <GPIO_Init+0x26a>
		{
			temp= pGPIOHandle->GPIO_PinConfig.GPIO_AltFunmode << 4*(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000798:	687b      	ldr	r3, [r7, #4]
 800079a:	7a5b      	ldrb	r3, [r3, #9]
 800079c:	461a      	mov	r2, r3
 800079e:	687b      	ldr	r3, [r7, #4]
 80007a0:	791b      	ldrb	r3, [r3, #4]
 80007a2:	009b      	lsls	r3, r3, #2
 80007a4:	fa02 f303 	lsl.w	r3, r2, r3
 80007a8:	617b      	str	r3, [r7, #20]
			pGPIOHandle->pGPIO->AFRL &= ~(0x0F << 4*(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80007aa:	687b      	ldr	r3, [r7, #4]
 80007ac:	681b      	ldr	r3, [r3, #0]
 80007ae:	6a1a      	ldr	r2, [r3, #32]
 80007b0:	687b      	ldr	r3, [r7, #4]
 80007b2:	791b      	ldrb	r3, [r3, #4]
 80007b4:	009b      	lsls	r3, r3, #2
 80007b6:	210f      	movs	r1, #15
 80007b8:	fa01 f303 	lsl.w	r3, r1, r3
 80007bc:	43db      	mvns	r3, r3
 80007be:	4619      	mov	r1, r3
 80007c0:	687b      	ldr	r3, [r7, #4]
 80007c2:	681b      	ldr	r3, [r3, #0]
 80007c4:	400a      	ands	r2, r1
 80007c6:	621a      	str	r2, [r3, #32]
			pGPIOHandle->pGPIO->AFRL |= temp;
 80007c8:	687b      	ldr	r3, [r7, #4]
 80007ca:	681b      	ldr	r3, [r3, #0]
 80007cc:	6a19      	ldr	r1, [r3, #32]
 80007ce:	687b      	ldr	r3, [r7, #4]
 80007d0:	681b      	ldr	r3, [r3, #0]
 80007d2:	697a      	ldr	r2, [r7, #20]
 80007d4:	430a      	orrs	r2, r1
 80007d6:	621a      	str	r2, [r3, #32]
			temp= pGPIOHandle->GPIO_PinConfig.GPIO_AltFunmode << 4*(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber-8);
			pGPIOHandle->pGPIO->AFRH &= ~(0x0F << 4*(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber-8));
			pGPIOHandle->pGPIO->AFRH |= temp;
		}
	}
}
 80007d8:	e021      	b.n	800081e <GPIO_Init+0x2ae>
			temp= pGPIOHandle->GPIO_PinConfig.GPIO_AltFunmode << 4*(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber-8);
 80007da:	687b      	ldr	r3, [r7, #4]
 80007dc:	7a5b      	ldrb	r3, [r3, #9]
 80007de:	461a      	mov	r2, r3
 80007e0:	687b      	ldr	r3, [r7, #4]
 80007e2:	791b      	ldrb	r3, [r3, #4]
 80007e4:	3b08      	subs	r3, #8
 80007e6:	009b      	lsls	r3, r3, #2
 80007e8:	fa02 f303 	lsl.w	r3, r2, r3
 80007ec:	617b      	str	r3, [r7, #20]
			pGPIOHandle->pGPIO->AFRH &= ~(0x0F << 4*(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber-8));
 80007ee:	687b      	ldr	r3, [r7, #4]
 80007f0:	681b      	ldr	r3, [r3, #0]
 80007f2:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80007f4:	687b      	ldr	r3, [r7, #4]
 80007f6:	791b      	ldrb	r3, [r3, #4]
 80007f8:	3b08      	subs	r3, #8
 80007fa:	009b      	lsls	r3, r3, #2
 80007fc:	210f      	movs	r1, #15
 80007fe:	fa01 f303 	lsl.w	r3, r1, r3
 8000802:	43db      	mvns	r3, r3
 8000804:	4619      	mov	r1, r3
 8000806:	687b      	ldr	r3, [r7, #4]
 8000808:	681b      	ldr	r3, [r3, #0]
 800080a:	400a      	ands	r2, r1
 800080c:	625a      	str	r2, [r3, #36]	@ 0x24
			pGPIOHandle->pGPIO->AFRH |= temp;
 800080e:	687b      	ldr	r3, [r7, #4]
 8000810:	681b      	ldr	r3, [r3, #0]
 8000812:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 8000814:	687b      	ldr	r3, [r7, #4]
 8000816:	681b      	ldr	r3, [r3, #0]
 8000818:	697a      	ldr	r2, [r7, #20]
 800081a:	430a      	orrs	r2, r1
 800081c:	625a      	str	r2, [r3, #36]	@ 0x24
}
 800081e:	bf00      	nop
 8000820:	3718      	adds	r7, #24
 8000822:	46bd      	mov	sp, r7
 8000824:	bd80      	pop	{r7, pc}
 8000826:	bf00      	nop
 8000828:	4006a000 	.word	0x4006a000
 800082c:	401fc000 	.word	0x401fc000
 8000830:	4008e000 	.word	0x4008e000

08000834 <GPIO_ToggleOutputPin>:
void GPIO_WritToOutputPort(GPIO_RegDef_t *PGPIOx,uint16_t PortValue)
{
	PGPIOx->ODR = (uint32_t)PortValue;
}
void GPIO_ToggleOutputPin(GPIO_RegDef_t *PGPIOx, uint8_t PinNumber)
{
 8000834:	b480      	push	{r7}
 8000836:	b083      	sub	sp, #12
 8000838:	af00      	add	r7, sp, #0
 800083a:	6078      	str	r0, [r7, #4]
 800083c:	460b      	mov	r3, r1
 800083e:	70fb      	strb	r3, [r7, #3]
	PGPIOx->ODR ^= (1<<PinNumber);
 8000840:	687b      	ldr	r3, [r7, #4]
 8000842:	695b      	ldr	r3, [r3, #20]
 8000844:	78fa      	ldrb	r2, [r7, #3]
 8000846:	2101      	movs	r1, #1
 8000848:	fa01 f202 	lsl.w	r2, r1, r2
 800084c:	405a      	eors	r2, r3
 800084e:	687b      	ldr	r3, [r7, #4]
 8000850:	615a      	str	r2, [r3, #20]
}
 8000852:	bf00      	nop
 8000854:	370c      	adds	r7, #12
 8000856:	46bd      	mov	sp, r7
 8000858:	f85d 7b04 	ldr.w	r7, [sp], #4
 800085c:	4770      	bx	lr
	...

08000860 <GPIO_IRQHandling>:
	uint8_t  iprx= IRQNumber/4;
	uint8_t iprx_section= IRQNumber%4;
	*((NVIC_PR_BASE_ADDR)+iprx) |= IRQPriority<< ( (iprx_section*8 )+ 4); //lower 4 bits are not implemented stm32
}
void GPIO_IRQHandling(uint8_t PinNumber)
{
 8000860:	b480      	push	{r7}
 8000862:	b083      	sub	sp, #12
 8000864:	af00      	add	r7, sp, #0
 8000866:	4603      	mov	r3, r0
 8000868:	71fb      	strb	r3, [r7, #7]
	if((EXTI)->EXTI_PR & 1<<PinNumber)
 800086a:	4b0c      	ldr	r3, [pc, #48]	@ (800089c <GPIO_IRQHandling+0x3c>)
 800086c:	695b      	ldr	r3, [r3, #20]
 800086e:	79fa      	ldrb	r2, [r7, #7]
 8000870:	2101      	movs	r1, #1
 8000872:	fa01 f202 	lsl.w	r2, r1, r2
 8000876:	4013      	ands	r3, r2
 8000878:	2b00      	cmp	r3, #0
 800087a:	d009      	beq.n	8000890 <GPIO_IRQHandling+0x30>
	{
		(EXTI)->EXTI_PR|=1<<PinNumber;
 800087c:	4b07      	ldr	r3, [pc, #28]	@ (800089c <GPIO_IRQHandling+0x3c>)
 800087e:	695b      	ldr	r3, [r3, #20]
 8000880:	79fa      	ldrb	r2, [r7, #7]
 8000882:	2101      	movs	r1, #1
 8000884:	fa01 f202 	lsl.w	r2, r1, r2
 8000888:	4611      	mov	r1, r2
 800088a:	4a04      	ldr	r2, [pc, #16]	@ (800089c <GPIO_IRQHandling+0x3c>)
 800088c:	430b      	orrs	r3, r1
 800088e:	6153      	str	r3, [r2, #20]
	}
}
 8000890:	bf00      	nop
 8000892:	370c      	adds	r7, #12
 8000894:	46bd      	mov	sp, r7
 8000896:	f85d 7b04 	ldr.w	r7, [sp], #4
 800089a:	4770      	bx	lr
 800089c:	4006a000 	.word	0x4006a000

080008a0 <__libc_init_array>:
 80008a0:	b570      	push	{r4, r5, r6, lr}
 80008a2:	4d0d      	ldr	r5, [pc, #52]	@ (80008d8 <__libc_init_array+0x38>)
 80008a4:	4c0d      	ldr	r4, [pc, #52]	@ (80008dc <__libc_init_array+0x3c>)
 80008a6:	1b64      	subs	r4, r4, r5
 80008a8:	10a4      	asrs	r4, r4, #2
 80008aa:	2600      	movs	r6, #0
 80008ac:	42a6      	cmp	r6, r4
 80008ae:	d109      	bne.n	80008c4 <__libc_init_array+0x24>
 80008b0:	4d0b      	ldr	r5, [pc, #44]	@ (80008e0 <__libc_init_array+0x40>)
 80008b2:	4c0c      	ldr	r4, [pc, #48]	@ (80008e4 <__libc_init_array+0x44>)
 80008b4:	f000 f818 	bl	80008e8 <_init>
 80008b8:	1b64      	subs	r4, r4, r5
 80008ba:	10a4      	asrs	r4, r4, #2
 80008bc:	2600      	movs	r6, #0
 80008be:	42a6      	cmp	r6, r4
 80008c0:	d105      	bne.n	80008ce <__libc_init_array+0x2e>
 80008c2:	bd70      	pop	{r4, r5, r6, pc}
 80008c4:	f855 3b04 	ldr.w	r3, [r5], #4
 80008c8:	4798      	blx	r3
 80008ca:	3601      	adds	r6, #1
 80008cc:	e7ee      	b.n	80008ac <__libc_init_array+0xc>
 80008ce:	f855 3b04 	ldr.w	r3, [r5], #4
 80008d2:	4798      	blx	r3
 80008d4:	3601      	adds	r6, #1
 80008d6:	e7f2      	b.n	80008be <__libc_init_array+0x1e>
 80008d8:	08000900 	.word	0x08000900
 80008dc:	08000900 	.word	0x08000900
 80008e0:	08000900 	.word	0x08000900
 80008e4:	08000904 	.word	0x08000904

080008e8 <_init>:
 80008e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008ea:	bf00      	nop
 80008ec:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80008ee:	bc08      	pop	{r3}
 80008f0:	469e      	mov	lr, r3
 80008f2:	4770      	bx	lr

080008f4 <_fini>:
 80008f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008f6:	bf00      	nop
 80008f8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80008fa:	bc08      	pop	{r3}
 80008fc:	469e      	mov	lr, r3
 80008fe:	4770      	bx	lr
